import{m as y,Y as E,d as v,c as C,o,e as n,f as s,F as m,C as h,h as r,j as i,X as S,g as M,w,l as B,V as T}from"./index.1be34501.js";import{l as F}from"./load.b9090f49.js";var D=JSON.parse(`{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["tourist","a"],["codeforces","b"],["1985H2","c"],["Maximize the Largest Component (Hard Version)","d"],["OK","e"],["1985H1","f"],["Maximize the Largest Component (Easy Version)","g"],["WRONG_ANSWER","h"],["1985G","i"],["D-Function","j"],["1985D","k"],["Manhattan Circle","l"],["1985F","m"],["Final Boss","n"],["1985E","o"],["Secret Box","p"],["1985C","q"],["Good Prefixes","r"],["1985B","s"],["Maximum Multiple Sum","t"],["1985A","u"],["Creating Words","v"],["jiangly","w"],["1984H","x"],["Tower Capturing","y"],["1984G","z"],["Magic Trick II","A"],["1984F","B"],["Reconstruction","C"],["1984E","D"],["Shuffle","E"],["1984D","F"],["''a'' String Problem","G"],["1984C2","H"],["Magnitude (Hard Version)","I"],["1984C1","J"],["Magnitude (Easy Version)","K"],["1984B","L"],["Large Addition","M"],["1984A","N"],["Strange Splitting","O"],["1979C","P"],["Earning on Bets","Q"],["105173F","R"],["Factor","S"],["105173C","T"],["Ring","U"],["105173I","V"],["Password","W"]],"data":{"startTime":1717522369,"history":{"user":[{"a":"a","b":[{"c":"b","d":265300578,"e":"c","a":"d","f":"e","g":1718119253},{"c":"b","d":265300302,"e":"f","a":"g","f":"e","g":1718119237},{"c":"b","d":265274866,"e":"c","a":"d","f":"h","g":1718118059},{"c":"b","d":265272760,"e":"f","a":"g","f":"h","g":1718117979},{"c":"b","d":265245818,"e":"i","a":"j","f":"e","g":1718117162},{"c":"b","d":265240490,"e":"k","a":"l","f":"e","g":1718117046},{"c":"b","d":265238371,"e":"m","a":"n","f":"e","g":1718117016},{"c":"b","d":265230975,"e":"o","a":"p","f":"e","g":1718116848},{"c":"b","d":265224248,"e":"k","a":"l","f":"h","g":1718116730},{"c":"b","d":265219570,"e":"q","a":"r","f":"e","g":1718116666},{"c":"b","d":265214132,"e":"s","a":"t","f":"e","g":1718116606},{"c":"b","d":265212092,"e":"u","a":"v","f":"e","g":1718116572}],"h":[]},{"a":"w","b":[{"c":"b","d":265279413,"e":"c","a":"d","f":"e","g":1718118240},{"c":"b","d":265264217,"e":"f","a":"g","f":"e","g":1718117678},{"c":"b","d":265253167,"e":"i","a":"j","f":"e","g":1718117347},{"c":"b","d":265245304,"e":"m","a":"n","f":"e","g":1718117152},{"c":"b","d":265237950,"e":"o","a":"p","f":"e","g":1718117003},{"c":"b","d":265231985,"e":"k","a":"l","f":"e","g":1718116867},{"c":"b","d":265226733,"e":"q","a":"r","f":"e","g":1718116770},{"c":"b","d":265221693,"e":"s","a":"t","f":"e","g":1718116691},{"c":"b","d":265211858,"e":"u","a":"v","f":"e","g":1718116564}],"h":[]},{"a":"a","b":[{"c":"b","d":264938707,"e":"x","a":"y","f":"e","g":1717950107},{"c":"b","d":264920861,"e":"z","a":"A","f":"e","g":1717947853},{"c":"b","d":264906446,"e":"B","a":"C","f":"e","g":1717946413},{"c":"b","d":264901694,"e":"D","a":"E","f":"e","g":1717946015},{"c":"b","d":264893993,"e":"F","a":"G","f":"e","g":1717945449},{"c":"b","d":264887262,"e":"H","a":"I","f":"e","g":1717945016},{"c":"b","d":264884173,"e":"H","a":"I","f":"h","g":1717944830},{"c":"b","d":264874368,"e":"J","a":"K","f":"e","g":1717944332},{"c":"b","d":264865594,"e":"L","a":"M","f":"e","g":1717943940},{"c":"b","d":264862909,"e":"N","a":"O","f":"e","g":1717943807}],"h":[]},{"a":"w","b":[{"c":"b","d":264944655,"e":"x","a":"y","f":"e","g":1717951023},{"c":"b","d":264927830,"e":"z","a":"A","f":"e","g":1717948647},{"c":"b","d":264927159,"e":"z","a":"A","f":"h","g":1717948571},{"c":"b","d":264901215,"e":"B","a":"C","f":"e","g":1717945979},{"c":"b","d":264894399,"e":"D","a":"E","f":"e","g":1717945477},{"c":"b","d":264886654,"e":"F","a":"G","f":"e","g":1717944978},{"c":"b","d":264878053,"e":"H","a":"I","f":"e","g":1717944508},{"c":"b","d":264872281,"e":"J","a":"K","f":"e","g":1717944248},{"c":"b","d":264865780,"e":"L","a":"M","f":"e","g":1717943947},{"c":"b","d":264862790,"e":"N","a":"O","f":"e","g":1717943791}],"h":[]},{"a":"w","b":[{"c":"b","d":264460743,"e":"1979F","a":"Kostyanych's Theorem","f":"e","g":1717688436},{"c":"b","d":264441088,"e":"P","a":"Q","f":"e","g":1717686621},{"c":"b","d":264440848,"e":"1979E","a":"Manhattan Triangle","f":"e","g":1717686601},{"c":"b","d":264429339,"e":"1979D","a":"Fixing a Binary String","f":"e","g":1717685737},{"c":"b","d":264420101,"e":"P","a":"Q","f":"h","g":1717685153},{"c":"b","d":264412912,"e":"1979B","a":"XOR Sequences","f":"e","g":1717684815},{"c":"b","d":264408629,"e":"1979A","a":"Guess the Maximum","f":"e","g":1717684644}],"h":[]},{"a":"w","b":[{"c":"b","d":264255804,"e":"R","a":"S","f":"e","g":1717588871},{"c":"b","d":264255189,"e":"T","a":"U","f":"e","g":1717588575},{"c":"b","d":264254893,"e":"T","a":"U","f":"MEMORY_LIMIT_EXCEEDED","g":1717588439},{"c":"b","d":264252212,"e":"105173B","a":"Charging Station","f":"e","g":1717587310},{"c":"b","d":264250152,"e":"105173G","a":"Diamond","f":"e","g":1717586453},{"c":"b","d":264247508,"e":"105173H","a":"Meet","f":"e","g":1717585314},{"c":"b","d":264246129,"e":"105173K","a":"Tasks","f":"e","g":1717584651},{"c":"b","d":264243884,"e":"105173M","a":"House","f":"e","g":1717583609},{"c":"b","d":264243092,"e":"105173L","a":"Bracket Generation","f":"e","g":1717583224},{"c":"b","d":264241424,"e":"V","a":"W","f":"e","g":1717582388},{"c":"b","d":264239866,"e":"V","a":"W","f":"h","g":1717581667},{"c":"b","d":264239213,"e":"R","a":"S","f":"e","g":1717581369},{"c":"b","d":264238405,"e":"105173E","a":"Checksum","f":"e","g":1717581001},{"c":"b","d":264237804,"e":"105173D","a":"nIM gAME","f":"e","g":1717580736},{"c":"b","d":264237331,"e":"105173A","a":"Paper Watering","f":"e","g":1717580501},{"c":"b","d":264236765,"e":"105173J","a":"Breakfast","f":"e","g":1717580237}],"h":[]}],"contest":[]},"commits":["6c5e412963a983a3774aa40cfaedf429a4de01fc","180d2fe8e2bc361a938a153a2834eb2d525bf9ae","2c9530c09410e0205ac5a17c04bad8d2ecb9e40f","a2a9d09fd396869bb5e38f4a191e3c8883b86480","2923c05b812c0ba178aab87542cd7c751c15c0e2","6644dca2ed723b277bfc087d41d37a73b0e4ade2","a8aabaad121fd0894083ebb89198ca38cb39abf7","ba0ba09044c82ab69e63f2d0f6fe3b91bcb46e0d","c2fa8c0701c29419c6bae46d57a294175be1a67f","53f5bbc0ca70b4e9ecab49d32ef1d29624b34724","e6942d52b6ac9942147a4c7c82e76709aa4fe4e7","24ee3bf40e5af1874b94a2c6973c63ee9dc23a8c","ea293c6d44e7325331141a00b0a1833ef906f5d8","335f3accdf1dbb08de1553904183528de1bcab77"]}}`);const g=F(D),k=g.history;g.commits;const R=y(g.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,c]of this.submissions)e.push({name:a,newSubmissions:c,newContests:[]});return e.sort((a,c)=>c.newSubmissions.length-a.newSubmissions.length)}}const f=new Map;var p;for(const t of(p=k.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<g.startTime)continue;const a=E(e.creationTime).value;f.has(a)||f.set(a,new x),f.get(a).mergeSub(t.name,e)}const l=[...f.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const A={class:"divide-y"},H=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),L={class:"py-4"},V={class:"pl-[8px] relative timeline"},G={class:"font-bold pb-2"},I={class:"mt-2"},O=s("span",null," \u63D0\u4EA4\u4E86 ",-1),N={class:"font-bold"},W=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),z={class:"font-bold"},K=s("span",null," \u4E2A\u9898\u76EE",-1),P={class:"mt-2 pt-4"},j={class:"text-gray-400"},$=v({setup(t){const e=a=>a.filter(c=>c.verdict===T.OK);return(a,c)=>{const _=C("router-link");return o(),n("div",A,[H,s("div",L,[s("div",V,[(o(!0),n(m,null,h(r(l),(u,d)=>(o(),n("div",{key:u.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:d>0?0:void 0,borderTopLeftRadius:d>0?0:void 0,borderTopRightRadius:d>0?0:void 0,borderBottomLeftRadius:d+1<r(l).length?0:void 0,borderBottomRightRadius:d+1<r(l).length?0:void 0})},[s("div",G,i(u.day),1),s("div",null,[(o(!0),n(m,null,h(u.record.list(),b=>(o(),n("div",I,[M(_,{to:`/user/${b.name}`},{default:w(()=>[B(i(b.name),1)]),_:2},1032,["to"]),O,s("span",N,i(b.newSubmissions.length),1),W,s("span",z,i(e(b.newSubmissions).length),1),K]))),256))])],4)]))),128))])]),s("div",P,[s("span",j,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(r(R)),1)])])}}});export{$ as default};
