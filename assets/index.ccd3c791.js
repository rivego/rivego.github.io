import{m as y,Y as E,d as v,c as S,o as c,e as i,f as a,F as g,C as h,h as f,j as n,X as T,g as F,w as k,l as w,V as C}from"./index.65cce9c2.js";import{l as D}from"./load.b9090f49.js";var R=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["creationTime","f"],["verdict","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["1286F","c"],["Harry The Potter","d"],["OK","e"],["TIME_LIMIT_EXCEEDED","f"],["WRONG_ANSWER","g"],["1299E","h"],["So Mean","i"],["1179E","j"],["Alesya and Discrete Math","k"]],"data":{"startTime":1726248882,"history":{"user":[{"a":"a","b":[{"c":"b","d":282086869,"e":"2013F2","a":"Game in Tree (Hard Version)","f":1726848442},{"c":"b","d":281944056,"e":"c","a":"d","g":"e","f":1726813451},{"c":"b","d":281943334,"e":"c","a":"d","g":"f","f":1726812975},{"c":"b","d":281941830,"e":"c","a":"d","g":"f","f":1726812003},{"c":"b","d":281941692,"e":"c","a":"d","g":"g","f":1726811914}],"h":[]},{"a":"a","b":[{"c":"b","d":281937653,"e":"1290F","a":"Making Shapes","g":"e","f":1726809129},{"c":"b","d":281907688,"e":"h","a":"i","g":"e","f":1726772691},{"c":"b","d":281906886,"e":"h","a":"i","g":"RUNTIME_ERROR","f":1726772223}],"h":[]},{"a":"a","b":[{"c":"b","d":281776003,"e":"1182A","a":"Filling Shapes","g":"e","f":1726681715},{"c":"b","d":281774983,"e":"1179D","a":"Fedor Runs for President","g":"e","f":1726681189}],"h":[]},{"a":"a","b":[{"c":"b","d":281771141,"e":"j","a":"k","g":"e","f":1726679645},{"c":"b","d":281765898,"e":"j","a":"k","g":"g","f":1726677173},{"c":"b","d":281764197,"e":"j","a":"k","g":"f","f":1726676358}],"h":[]},{"a":"tourist","b":[{"c":"b","d":281561360,"e":"2017G","a":"Berserk Monsters","g":"e","f":1726550662},{"c":"b","d":281560744,"e":"2017F","a":"Colored Portals","g":"e","f":1726550173},{"c":"b","d":281559972,"e":"2017E","a":"Decreasing String","g":"e","f":1726549509},{"c":"b","d":281559494,"e":"2017D","a":"Forming Triangles","g":"e","f":1726549081},{"c":"b","d":281559325,"e":"2017C","a":"Make Equal Again","g":"e","f":1726548908},{"c":"b","d":281559071,"e":"2017B","a":"Square or Not","g":"e","f":1726548655},{"c":"b","d":281558914,"e":"2017A","a":"My First Sorting Problem","g":"e","f":1726548496}],"h":[]},{"a":"a","b":[{"c":"b","d":281200546,"e":"2005E1","a":"Subtangle Game (Easy Version)","g":"e","f":1726327461},{"c":"b","d":281199968,"e":"2005E2","a":"Subtangle Game (Hard Version)","g":"e","f":1726327427},{"c":"b","d":281179585,"e":"2005D","a":"Alter the GCD","g":"e","f":1726326379},{"c":"b","d":281156277,"e":"2005C","a":"Lazy Narek","g":"e","f":1726325352},{"c":"b","d":281149200,"e":"2005B1","a":"The Strict Teacher (Easy Version)","g":"e","f":1726325086},{"c":"b","d":281148763,"e":"2005B2","a":"The Strict Teacher (Hard Version)","g":"e","f":1726325070},{"c":"b","d":281142777,"e":"2005A","a":"Simple Palindrome","g":"e","f":1726324850}],"h":[]}],"contest":[]},"commits":["7b086414cdafabc14cf0bb7f8db2bfe65d2cf581","e2d95a7bbc1c9d7969d9b0f23767e981ae329eaf","5358dd0efd6df337ee595564ae5d425532370a3b","9d419962a18a5d847584929f7869c797f86c4419","72e0914e2a03b756d9cf3ff4ba12a9959e8bee6d","6a3ecd37e5b0e93275ed5d0f95d8afb3c0580199","2d151dea2c677a9b7d51ff8c902fabf8d0f3857d","6d74f086dd1373ad75130ea67dc11a9765e7c156","35ec1d73bbed8fb4afa67767d5ae5bc6f7c98b7d","3f062c2fcbef2d9975bb0ad982b335a0adad5a06","4871d08c9d3cd0a49a9c07c9d7c49757c64e67ed","1ef25628f690b8e4afce374365c3767c550d27f6","bcdf528d4013ca971a0177ebdf5903883f741037","91ccb6193fe092288f86bde2c735508a45c396ff"]}}');const l=D(R),M=l.history;l.commits;const B=y(l.startTime);class A{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,d]of this.submissions)e.push({name:s,newSubmissions:d,newContests:[]});return e.sort((s,d)=>d.newSubmissions.length-s.newSubmissions.length)}}const b=new Map;var _;for(const t of(_=M.user)!=null?_:[])for(const e of t.newSubmissions){if(e.creationTime<l.startTime)continue;const s=E(e.creationTime).value;b.has(s)||b.set(s,new A),b.get(s).mergeSub(t.name,e)}const m=[...b.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const V={class:"divide-y"},N=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),j={class:"py-4"},G={class:"pl-[8px] relative timeline"},L={class:"font-bold pb-2"},O={class:"mt-2"},x=a("span",null," \u63D0\u4EA4\u4E86 ",-1),H={class:"font-bold"},P=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),I={class:"font-bold"},$=a("span",null," \u4E2A\u9898\u76EE",-1),W={class:"mt-2 pt-4"},q={class:"text-gray-400"},X=v({setup(t){const e=s=>s.filter(d=>d.verdict===C.OK);return(s,d)=>{const p=S("router-link");return c(),i("div",V,[N,a("div",j,[a("div",G,[(c(!0),i(g,null,h(f(m),(u,o)=>(c(),i("div",{key:u.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:T({borderTopWidth:o>0?0:void 0,borderTopLeftRadius:o>0?0:void 0,borderTopRightRadius:o>0?0:void 0,borderBottomLeftRadius:o+1<f(m).length?0:void 0,borderBottomRightRadius:o+1<f(m).length?0:void 0})},[a("div",L,n(u.day),1),a("div",null,[(c(!0),i(g,null,h(u.record.list(),r=>(c(),i("div",O,[F(p,{to:`/user/${r.name}`},{default:k(()=>[w(n(r.name),1)]),_:2},1032,["to"]),x,a("span",H,n(r.newSubmissions.length),1),P,a("span",I,n(e(r.newSubmissions).length),1),$]))),256))])],4)]))),128))])]),a("div",W,[a("span",q,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+n(f(B)),1)])])}}});export{X as default};
