import{m as v,Y as g,d as w,c as E,o as i,e as c,f as t,F as p,C as _,h as u,j as d,X as S,g as T,w as C,l as F,V as B}from"./index.fb0cbe2f.js";import{l as D}from"./load.b9090f49.js";var k=JSON.parse(`{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"]],"data":{"startTime":1745905198,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":318006136,"d":"2108A","a":"Permutation Warm-Up","e":"b","f":1746116131},{"b":"a","c":318005108,"d":"2108B","a":"SUMdamental Decomposition","e":"b","f":1746115988},{"b":"a","c":318002634,"d":"2108C","a":"Neo's Escape","e":"b","f":1746115636},{"b":"a","c":318000771,"d":"2108D","a":"Needle in a Numstack","e":"b","f":1746115372},{"b":"a","c":317995507,"d":"2108E","a":"Spruce Dispute","e":"b","f":1746114628},{"b":"a","c":317991753,"d":"2108F","a":"Fallen Towers","e":"b","f":1746114091}],"newContests":[]}],"contest":[]},"commits":["9f303512da348549f51130beeb95c23ab1e48b90","bd28ab7a7b5631e53af099270ca42dc850230681","8ca2e38623cde319ae320514bdab26aa2afa564f","0b29c2f7bc51e27143fc20e54cd6202ec8a0bb70","32d9d71ae8bddd04dcf47e5264e20296d76bc30e","11a3e395fb3a9eb2791350056d4cc8ad98c7f628","bf2b456d426660c795f0adc9e75abc3f9d7d1029","02a309af8e21c643ee757c78a8e37234035c5279","906bd7072198edf0e3379dadb64b969d0c3cd430","95e01be4e3b260e9754383b6e30fb5c867689833","eafc42dc52ab348e0c818b6247008f3062ea13bc","e0168f74c01485cbb46ca856788702e97ddf8c0c","67240c12a3fbf376940b8379d480602984eefee8","8f5cf6edee097c47494d72ea188f03604349abf1"]}}`);const l=D(k),N=l.history;l.commits;const R=v(l.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const b=new Map;var h;for(const a of(h=N.user)!=null?h:[])for(const e of a.newSubmissions){if(e.creationTime<l.startTime)continue;const s=g(e.creationTime).value;b.has(s)||b.set(s,new x),b.get(s).mergeSub(a.name,e)}const f=[...b.entries()].map(a=>({day:a[0],record:a[1]})).sort((a,e)=>e.day.localeCompare(a.day)).map(a=>({day:a.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:a.record}));const M={class:"divide-y"},V=t("h2",{class:"mb-4"},"\u5386\u53F2",-1),A={class:"py-4"},L={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},$={class:"mt-2"},j=t("span",null," \u63D0\u4EA4\u4E86 ",-1),K={class:"font-bold"},U=t("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),W={class:"font-bold"},z=t("span",null," \u4E2A\u9898\u76EE",-1),H={class:"mt-2 pt-4"},J={class:"text-gray-400"},Y=w({setup(a){const e=s=>s.filter(o=>o.verdict===B.OK);return(s,o)=>{const y=E("router-link");return i(),c("div",M,[V,t("div",A,[t("div",L,[(i(!0),c(p,null,_(u(f),(m,n)=>(i(),c("div",{key:m.day,class:"relative timeline-item pl-4"},[t("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:n>0?0:void 0,borderTopLeftRadius:n>0?0:void 0,borderTopRightRadius:n>0?0:void 0,borderBottomLeftRadius:n+1<u(f).length?0:void 0,borderBottomRightRadius:n+1<u(f).length?0:void 0})},[t("div",O,d(m.day),1),t("div",null,[(i(!0),c(p,null,_(m.record.list(),r=>(i(),c("div",$,[T(y,{to:`/user/${r.name}`},{default:C(()=>[F(d(r.name),1)]),_:2},1032,["to"]),j,t("span",K,d(r.newSubmissions.length),1),U,t("span",W,d(e(r.newSubmissions).length),1),z]))),256))])],4)]))),128))])]),t("div",H,[t("span",J,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+d(u(R)),1)])])}}});export{Y as default};
