import{m as y,Y as v,d as E,c as S,o,e as n,f as s,F as l,C as m,h as r,j as i,X as w,g as C,w as F,l as B,V as A}from"./index.e9ce8b01.js";import{l as D}from"./load.b9090f49.js";var R=JSON.parse(`{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["ybb_little_train","a"],["codeforces","b"],["2063C","c"],["Remove Exactly Two","d"],["WRONG_ANSWER","e"],["2063B","f"],["Subsequence Update","g"],["OK","h"],["2061H1","i"],["Kevin and Stones (Easy Version)","j"],["2061G","k"],["Kevin and Teams","l"],["2061F2","m"],["Kevin and Binary String (Hard Version)","n"],["2061F1","o"],["Kevin and Binary String (Easy Version)","p"],["2061E","q"],["Kevin and And","r"],["2061D","s"],["Kevin and Numbers","t"],["2061C","u"],["Kevin and Puzzle","v"],["2061B","w"],["Kevin and Geometry","x"],["2061A","y"],["Kevin and Arithmetic","z"],["jiangly","A"],["2060D","B"],["Subtract Min Sort","C"],["2060C","D"],["Game of Mathletes","E"],["RUNTIME_ERROR","F"],["2060B","G"],["Farmer John's Card Game","H"],["2060A","I"],["Fibonacciness","J"]],"data":{"startTime":1736962462,"history":{"user":[{"a":"a","b":[{"c":"b","d":302455950,"e":"c","a":"d","f":"e","g":1737554228},{"c":"b","d":302451798,"e":"c","a":"d","f":"e","g":1737553833},{"c":"b","d":302426639,"e":"f","a":"g","f":"h","g":1737551471},{"c":"b","d":302417258,"e":"f","a":"g","f":"e","g":1737550695},{"c":"b","d":302412054,"e":"f","a":"g","f":"e","g":1737550291},{"c":"b","d":302380320,"e":"f","a":"g","f":"e","g":1737548253},{"c":"b","d":302373882,"e":"2063A","a":"Minimal Coprime","f":"h","g":1737547981}],"h":[]},{"a":"tourist","b":[{"c":"b","d":302123846,"e":"i","a":"j","f":"h","g":1737393593},{"c":"b","d":302121333,"e":"i","a":"j","f":"e","g":1737393114},{"c":"b","d":302104836,"e":"k","a":"l","f":"h","g":1737390219},{"c":"b","d":302092403,"e":"m","a":"n","f":"h","g":1737388332},{"c":"b","d":302068249,"e":"o","a":"p","f":"h","g":1737385343},{"c":"b","d":302059898,"e":"q","a":"r","f":"h","g":1737384597},{"c":"b","d":302056206,"e":"s","a":"t","f":"h","g":1737384345},{"c":"b","d":302052972,"e":"u","a":"v","f":"h","g":1737384146},{"c":"b","d":302050832,"e":"w","a":"x","f":"h","g":1737384032},{"c":"b","d":302049009,"e":"y","a":"z","f":"h","g":1737383942},{"c":"b","d":302047133,"e":"y","a":"z","f":"e","g":1737383810}],"h":[]},{"a":"a","b":[{"c":"b","d":302112547,"e":"s","a":"t","f":"h","g":1737391477},{"c":"b","d":302111917,"e":"s","a":"t","f":"e","g":1737391364},{"c":"b","d":302077713,"e":"w","a":"x","f":"h","g":1737386419},{"c":"b","d":302076041,"e":"w","a":"x","f":"e","g":1737386217},{"c":"b","d":302055761,"e":"y","a":"z","f":"h","g":1737384317}],"h":[]},{"a":"A","b":[{"c":"b","d":302127475,"e":"m","a":"n","f":"h","g":1737394261},{"c":"b","d":302125418,"e":"m","a":"n","f":"e","g":1737393890},{"c":"b","d":302102508,"e":"i","a":"j","f":"h","g":1737389845},{"c":"b","d":302087277,"e":"k","a":"l","f":"h","g":1737387629},{"c":"b","d":302070705,"e":"o","a":"p","f":"h","g":1737385604},{"c":"b","d":302060766,"e":"q","a":"r","f":"h","g":1737384668},{"c":"b","d":302057147,"e":"s","a":"t","f":"h","g":1737384407},{"c":"b","d":302053893,"e":"u","a":"v","f":"h","g":1737384203},{"c":"b","d":302048946,"e":"w","a":"x","f":"h","g":1737383938},{"c":"b","d":302047037,"e":"y","a":"z","f":"h","g":1737383781}],"h":[]},{"a":"a","b":[{"c":"b","d":301819816,"e":"B","a":"C","f":"h","g":1737300803},{"c":"b","d":301802891,"e":"D","a":"E","f":"h","g":1737300007},{"c":"b","d":301795249,"e":"D","a":"E","f":"e","g":1737299685},{"c":"b","d":301792577,"e":"D","a":"E","f":"F","g":1737299576},{"c":"b","d":301789811,"e":"D","a":"E","f":"F","g":1737299459},{"c":"b","d":301779222,"e":"G","a":"H","f":"h","g":1737299029},{"c":"b","d":301749672,"e":"I","a":"J","f":"h","g":1737297891}],"h":[]},{"a":"A","b":[{"c":"b","d":301886356,"e":"2060G","a":"Bugged Sort","f":"h","g":1737305495},{"c":"b","d":301874355,"e":"2060F","a":"Multiplicative Arrays","f":"h","g":1737304338},{"c":"b","d":301864798,"e":"2060E","a":"Graph Composition","f":"h","g":1737303550},{"c":"b","d":301862671,"e":"B","a":"C","f":"h","g":1737303390},{"c":"b","d":301859013,"e":"D","a":"E","f":"h","g":1737303119},{"c":"b","d":301857304,"e":"G","a":"H","f":"h","g":1737303004},{"c":"b","d":301854489,"e":"I","a":"J","f":"h","g":1737302816}],"h":[]},{"a":"A","b":[{"c":"b","d":301440049,"e":"2056F2","a":"Xor of Median (Hard Version)","f":"h","g":1737128904},{"c":"b","d":301439822,"e":"2056F1","a":"Xor of Median (Easy Version)","f":"h","g":1737128883},{"c":"b","d":301414961,"e":"2056E","a":"Nested Segments","f":"h","g":1737126728},{"c":"b","d":301405892,"e":"2056D","a":"Unique Median","f":"h","g":1737126028},{"c":"b","d":301396770,"e":"2056C","a":"Palindromic Subsequences","f":"h","g":1737125368},{"c":"b","d":301393417,"e":"2056B","a":"Find the Permutation","f":"h","g":1737125154},{"c":"b","d":301393032,"e":"2056A","a":"Shape Perimeter","f":"h","g":1737125130}],"h":[]}],"contest":[]},"commits":["b3c9cc013a8bb89d9e2a80adb9488972593219c2","7bafc73fe71629d7804fbb04acb0d6c7c1407a74","b41cdcfa1e6dfe26d79de3eb63e4df22c5ebcbc2","1dc02b8df0662cf7b3424d7217ed67f024490053","64d24127667bcb3e5354aa9f62131ffd56730b65","cc8b04851dd55e1c39b0135212986ce32bb0bd5e","aadd9ba8a4b8d8176b978be3209c9bace702a5c1","0560c999c323ed4ad06d7dbf4dbe64d8dc98b738","62f37a979fd004ad0534a09dde6717c4206a1a84","2cb8649354aa030bd7d59508a13d12728bc20f10","dd958c7db6b41d510aebd59f354123e7ce1dbb77","b3724991dcadec135b1c1090563d618d66a61d31","eb0b730fc5b41a054f364f5a48d0a10a2ddff5ce","25e0b5670cc50607312fff890fb0f8d49350cd9f"]}}`);const h=D(R),T=h.history;h.commits;const M=y(h.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,t]of this.submissions)e.push({name:a,newSubmissions:t,newContests:[]});return e.sort((a,t)=>t.newSubmissions.length-a.newSubmissions.length)}}const f=new Map;var p;for(const d of(p=T.user)!=null?p:[])for(const e of d.newSubmissions){if(e.creationTime<h.startTime)continue;const a=v(e.creationTime).value;f.has(a)||f.set(a,new x),f.get(a).mergeSub(d.name,e)}const g=[...f.entries()].map(d=>({day:d[0],record:d[1]})).sort((d,e)=>e.day.localeCompare(d.day)).map(d=>({day:d.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:d.record}));const K={class:"divide-y"},k=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),G={class:"py-4"},V={class:"pl-[8px] relative timeline"},N={class:"font-bold pb-2"},z={class:"mt-2"},H=s("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},q=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),O={class:"font-bold"},J=s("span",null," \u4E2A\u9898\u76EE",-1),I={class:"mt-2 pt-4"},L={class:"text-gray-400"},U=E({setup(d){const e=a=>a.filter(t=>t.verdict===A.OK);return(a,t)=>{const _=S("router-link");return o(),n("div",K,[k,s("div",G,[s("div",V,[(o(!0),n(l,null,m(r(g),(u,c)=>(o(),n("div",{key:u.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:w({borderTopWidth:c>0?0:void 0,borderTopLeftRadius:c>0?0:void 0,borderTopRightRadius:c>0?0:void 0,borderBottomLeftRadius:c+1<r(g).length?0:void 0,borderBottomRightRadius:c+1<r(g).length?0:void 0})},[s("div",N,i(u.day),1),s("div",null,[(o(!0),n(l,null,m(u.record.list(),b=>(o(),n("div",z,[C(_,{to:`/user/${b.name}`},{default:F(()=>[B(i(b.name),1)]),_:2},1032,["to"]),H,s("span",j,i(b.newSubmissions.length),1),q,s("span",O,i(e(b.newSubmissions).length),1),J]))),256))])],4)]))),128))])]),s("div",I,[s("span",L,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(r(M)),1)])])}}});export{U as default};
