import{m as y,Y as v,d as C,c as E,o as c,e as n,f as s,F as g,C as p,h as f,j as i,X as S,g as w,w as k,l as B,V as F}from"./index.3e020133.js";import{l as R}from"./load.b9090f49.js";var T=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["codeforces","a"],["2020F","b"],["Count Leaves","c"],["OK","d"],["2020E","e"],["Expected Power","f"],["2020D","g"],["Connect the Dots","h"],["2020C","i"],["Bitwise Balancing","j"],["2020B","k"],["Brightness Begins","l"],["2020A","m"],["Find Minimum Operations","n"],["jiangly","o"],["WRONG_ANSWER","p"],["101492C","q"],["Coprimes","r"]],"data":{"startTime":1727069893,"history":{"user":[{"a":"tourist","b":[{"c":"a","d":283672395,"e":"b","a":"c","f":"d","g":1727640083},{"c":"a","d":283672372,"e":"b","a":"c","f":"d","g":1727640068},{"c":"a","d":283672366,"e":"b","a":"c","f":"d","g":1727640062},{"c":"a","d":283671852,"e":"b","a":"c","f":"d","g":1727639758},{"c":"a","d":283617562,"e":"b","a":"c","f":"d","g":1727627749},{"c":"a","d":283570027,"e":"e","a":"f","f":"d","g":1727624875},{"c":"a","d":283565809,"e":"g","a":"h","f":"d","g":1727624671},{"c":"a","d":283561527,"e":"i","a":"j","f":"d","g":1727624459},{"c":"a","d":283558153,"e":"k","a":"l","f":"d","g":1727624287},{"c":"a","d":283556689,"e":"m","a":"n","f":"d","g":1727624155}],"h":[]},{"a":"o","b":[{"c":"a","d":283697976,"e":"b","a":"c","f":"d","g":1727667514},{"c":"a","d":283604164,"e":"b","a":"c","f":"d","g":1727626793},{"c":"a","d":283591310,"e":"e","a":"f","f":"d","g":1727626008},{"c":"a","d":283584804,"e":"g","a":"h","f":"d","g":1727625643},{"c":"a","d":283581605,"e":"i","a":"j","f":"d","g":1727625464},{"c":"a","d":283577872,"e":"k","a":"l","f":"d","g":1727625267},{"c":"a","d":283576137,"e":"i","a":"j","f":"p","g":1727625178},{"c":"a","d":283568114,"e":"k","a":"l","f":"p","g":1727624783},{"c":"a","d":283565388,"e":"m","a":"n","f":"d","g":1727624653}],"h":[]},{"a":"o","b":[{"c":"a","d":283240998,"e":"2018F1","a":"Speedbreaker Counting (Easy Version)","f":"d","g":1727451253},{"c":"a","d":283240981,"e":"2018F2","a":"Speedbreaker Counting (Medium Version)","f":"d","g":1727451250},{"c":"a","d":283240882,"e":"2018F3","a":"Speedbreaker Counting (Hard Version)","f":"d","g":1727451233},{"c":"a","d":283228724,"e":"2018E2","a":"Complex Segments (Hard Version)","f":"d","g":1727449439},{"c":"a","d":283228436,"e":"2018E1","a":"Complex Segments (Easy Version)","f":"d","g":1727449399},{"c":"a","d":283195973,"e":"2018D","a":"Max Plus Min Plus Size","f":"d","g":1727445354},{"c":"a","d":283191019,"e":"2018C","a":"Tree Pruning","f":"d","g":1727444924},{"c":"a","d":283187765,"e":"2018B","a":"Speedbreaker","f":"d","g":1727444677},{"c":"a","d":283182907,"e":"2018A","a":"Cards Partition","f":"d","g":1727444364}],"h":[]},{"a":"Kenshin2438","b":[{"c":"a","d":283014667,"e":"q","a":"r","f":"d","g":1727340507},{"c":"a","d":283014292,"e":"q","a":"r","f":"d","g":1727340320}],"h":[]},{"a":"ybb_little_train","b":[{"c":"a","d":282934276,"e":"2014H","a":"Robin Hood Archery","f":"COMPILATION_ERROR","g":1727277215}],"h":[]}],"contest":[]},"commits":["ec7b880324d6fe9feca352ff02f045acabcbeb5e","2aafcc54c06cff7158a375844d46f72e663c10fc","725ab1048ccb869214f6796631312237694b031e","54e57ac9bb1e4a0f3a2cd5c5b9a1c876d6d06a67","4bfe2cc7d03664218f708eb7a2d861dd8c036905","c88a29143c4f124997807ebe7df73846f60297ed","c06036f089497ec50391642fefce6c9ac785bc0d","a4ad7f808f778887df25ad3856bff0a70a7acdea","b682e296761edbc0200e90fd8c94914571dfe69e","3e2245ee2a356d788f53de9b233d0bd1f03e599f","6189d7f8f149ce9d0f29eb4fa243db9f1fa04709","2281e6f19333ede452b71acde603697754b8773f","147f10c523f21d666505c26ae7e7b3cfa1d56670"]}}');const l=R(T),V=l.history;l.commits;const x=y(l.startTime);class D{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,d]of this.submissions)e.push({name:a,newSubmissions:d,newContests:[]});return e.sort((a,d)=>d.newSubmissions.length-a.newSubmissions.length)}}const u=new Map;var h;for(const t of(h=V.user)!=null?h:[])for(const e of t.newSubmissions){if(e.creationTime<l.startTime)continue;const a=v(e.creationTime).value;u.has(a)||u.set(a,new D),u.get(a).mergeSub(t.name,e)}const m=[...u.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const M={class:"divide-y"},O=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),A={class:"py-4"},N={class:"pl-[8px] relative timeline"},j={class:"font-bold pb-2"},L={class:"mt-2"},P=s("span",null," \u63D0\u4EA4\u4E86 ",-1),H={class:"font-bold"},$=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),q={class:"font-bold"},K=s("span",null," \u4E2A\u9898\u76EE",-1),W={class:"mt-2 pt-4"},z={class:"text-gray-400"},J=C({setup(t){const e=a=>a.filter(d=>d.verdict===F.OK);return(a,d)=>{const _=E("router-link");return c(),n("div",M,[O,s("div",A,[s("div",N,[(c(!0),n(g,null,p(f(m),(b,o)=>(c(),n("div",{key:b.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:o>0?0:void 0,borderTopLeftRadius:o>0?0:void 0,borderTopRightRadius:o>0?0:void 0,borderBottomLeftRadius:o+1<f(m).length?0:void 0,borderBottomRightRadius:o+1<f(m).length?0:void 0})},[s("div",j,i(b.day),1),s("div",null,[(c(!0),n(g,null,p(b.record.list(),r=>(c(),n("div",L,[w(_,{to:`/user/${r.name}`},{default:k(()=>[B(i(r.name),1)]),_:2},1032,["to"]),P,s("span",H,i(r.newSubmissions.length),1),$,s("span",q,i(e(r.newSubmissions).length),1),K]))),256))])],4)]))),128))])]),s("div",W,[s("span",z,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(f(x)),1)])])}}});export{J as default};
