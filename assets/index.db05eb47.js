import{m as k,Y as v,d as y,c as E,o as c,e as n,f as a,F as m,C as h,h as r,j as i,X as T,g as w,w as C,l as B,V as S}from"./index.16a35957.js";import{l as R}from"./load.b9090f49.js";var A=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["tourist","a"],["codeforces","b"],["TIME_LIMIT_EXCEEDED","c"],["1936D","d"],["Bitwise Paradox","e"],["WRONG_ANSWER","f"],["1936C","g"],["Pok\xE9mon Arena","h"],["1936A","i"],["Bitwise Operation Wizard","j"],["OK","k"],["1936B","l"],["Pinball","m"],["jiangly","n"],["1933A","o"],["Turtle Puzzle: Rearrange and Negate","p"],["1923F","q"],["Shrink-Reverse","r"],["1923E","s"],["Count Paths","t"],["1923D","u"],["Slimes","v"],["1923C","w"],["Find B","x"],["1923B","y"],["Monsters Attack!","z"],["1923A","A"],["Moving Chips","B"]],"data":{"startTime":1708623179,"history":{"user":[{"a":"a","b":[{"c":"b","d":248969707,"e":"1936E","a":"Yet Yet Another Permutation Problem","f":"c","g":1709224252},{"c":"b","d":248948695,"e":"d","a":"e","g":1709221798},{"c":"b","d":248941116,"e":"d","a":"e","f":"f","g":1709220937},{"c":"b","d":248939310,"e":"d","a":"e","f":"f","g":1709220737},{"c":"b","d":248923821,"e":"g","a":"h","g":1709219121},{"c":"b","d":248923147,"e":"g","a":"h","f":"f","g":1709219056},{"c":"b","d":248914647,"e":"i","a":"j","f":"k","g":1709218255},{"c":"b","d":248909886,"e":"l","a":"m","f":"k","g":1709217884}],"h":[]},{"a":"n","b":[{"c":"b","d":248956184,"e":"d","a":"e","g":1709222643},{"c":"b","d":248950659,"e":"d","a":"e","f":"c","g":1709222030},{"c":"b","d":248925527,"e":"g","a":"h","g":1709219302},{"c":"b","d":248915106,"e":"l","a":"m","f":"k","g":1709218296},{"c":"b","d":248906362,"e":"i","a":"j","f":"k","g":1709217633}],"h":[]},{"a":"n","b":[{"c":"b","d":248641651,"e":"o","a":"p","g":1709055255}],"h":[]},{"a":"n","b":[{"c":"b","d":248549111,"e":"1933G","a":"Turtle Magic: Royal Turtle Shell Pattern","f":"k","g":1709046612},{"c":"b","d":248539865,"e":"1933F","a":"Turtle Mission: Robot and the Earthquake","f":"k","g":1709046147},{"c":"b","d":248527450,"e":"1933E","a":"Turtle vs. Rabbit Race: Optimal Trainings","f":"k","g":1709045572},{"c":"b","d":248512706,"e":"1933D","a":"Turtle Tenacity: Continual Mods","f":"k","g":1709045019},{"c":"b","d":248508041,"e":"1933C","a":"Turtle Fingers: Count the Values of k","f":"k","g":1709044865},{"c":"b","d":248502920,"e":"1933B","a":"Turtle Math: Fast Three Task","f":"k","g":1709044737},{"c":"b","d":248496718,"e":"o","a":"p","f":"k","g":1709044630}],"h":[]},{"a":"a","b":[{"c":"b","d":247926735,"e":"q","a":"r","f":"k","g":1708701312},{"c":"b","d":247907637,"e":"s","a":"t","f":"k","g":1708699946},{"c":"b","d":247903362,"e":"u","a":"v","f":"k","g":1708699653},{"c":"b","d":247901978,"e":"u","a":"v","f":"f","g":1708699571},{"c":"b","d":247896441,"e":"w","a":"x","f":"CHALLENGED","g":1708699260},{"c":"b","d":247895061,"e":"w","a":"x","f":"f","g":1708699187},{"c":"b","d":247893401,"e":"y","a":"z","f":"k","g":1708699086},{"c":"b","d":247892642,"e":"A","a":"B","f":"k","g":1708698967}],"h":[]},{"a":"n","b":[{"c":"b","d":247927445,"e":"q","a":"r","f":"k","g":1708701375},{"c":"b","d":247910260,"e":"s","a":"t","f":"k","g":1708700120},{"c":"b","d":247906663,"e":"u","a":"v","f":"k","g":1708699878},{"c":"b","d":247899621,"e":"w","a":"x","f":"k","g":1708699451},{"c":"b","d":247895420,"e":"y","a":"z","f":"k","g":1708699207},{"c":"b","d":247893064,"e":"A","a":"B","f":"k","g":1708699055}],"h":[]}],"contest":[]},"commits":["92412e779d4e2158c57ae63b9a2bab00639bcebb","0c351f937b9ee3f8735f3f37d1ad4cef27a261f5","53dc7c3b6818b6db1cd7bdbd9c215fab8b759dba","7d8566702bd1eea671aa2b0ba159aae33c94206f","74802bdb46f48b45714207229b5cf5895746cf99","48e7902ddfabeb1239c49857cc9d3a6e02f66f86","2b52fb821846d0d3fd9c154be3d0da33ffd139a4","f9666354a058c75ad4224764558c84245ab26c67","ba2db60d621f36987728055d1254bc8ea7f8b14a","ce3fcb50c39600f06fed40797bfac5d8367547cd","b911eb5528a215b240ed87d5fffbcf17e636354a","e5066ccccd8ff9f96604fc9917a527520edeec6c","8b200ca417feb2bba29d1a8e972c696709e62b2f","2d67f79e85610d74e17a66164c193d43833418e6"]}}');const u=R(A),F=u.history;u.commits;const D=k(u.startTime);class M{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const f=new Map;var p;for(const t of(p=F.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<u.startTime)continue;const s=v(e.creationTime).value;f.has(s)||f.set(s,new M),f.get(s).mergeSub(t.name,e)}const g=[...f.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const x={class:"divide-y"},N=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),P={class:"py-4"},z={class:"pl-[8px] relative timeline"},L={class:"font-bold pb-2"},O={class:"mt-2"},V=a("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},q=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),W={class:"font-bold"},$=a("span",null," \u4E2A\u9898\u76EE",-1),G={class:"mt-2 pt-4"},I={class:"text-gray-400"},K=y({setup(t){const e=s=>s.filter(o=>o.verdict===S.OK);return(s,o)=>{const _=E("router-link");return c(),n("div",x,[N,a("div",P,[a("div",z,[(c(!0),n(m,null,h(r(g),(l,d)=>(c(),n("div",{key:l.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:T({borderTopWidth:d>0?0:void 0,borderTopLeftRadius:d>0?0:void 0,borderTopRightRadius:d>0?0:void 0,borderBottomLeftRadius:d+1<r(g).length?0:void 0,borderBottomRightRadius:d+1<r(g).length?0:void 0})},[a("div",L,i(l.day),1),a("div",null,[(c(!0),n(m,null,h(l.record.list(),b=>(c(),n("div",O,[w(_,{to:`/user/${b.name}`},{default:C(()=>[B(i(b.name),1)]),_:2},1032,["to"]),V,a("span",j,i(b.newSubmissions.length),1),q,a("span",W,i(e(b.newSubmissions).length),1),$]))),256))])],4)]))),128))])]),a("div",G,[a("span",I,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(r(D)),1)])])}}});export{K as default};
