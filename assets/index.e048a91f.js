import{m as y,Y as g,d as w,c as E,o as d,e as n,f as a,F as p,C as _,h as u,j as c,X as T,g as S,w as C,l as B,V as D}from"./index.3c8480f5.js";import{l as F}from"./load.b9090f49.js";var k=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"]],"data":{"startTime":1720027964,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":269275960,"d":"1983G","a":"Your Loss","e":"TESTING","f":1720368322},{"b":"a","c":269255826,"d":"1983F","a":"array-value","e":"b","f":1720365571},{"b":"a","c":269246230,"d":"1983E","a":"I Love Balls","e":"b","f":1720364446},{"b":"a","c":269241014,"d":"1983D","a":"Swap Dilemma","e":"b","f":1720363900},{"b":"a","c":269237498,"d":"1983C","a":"Have Your Cake and Eat It Too","e":"b","f":1720363629},{"b":"a","c":269231971,"d":"1983B","a":"Corner Twist","e":"b","f":1720363324},{"b":"a","c":269225839,"d":"1983A","a":"Array Divisibility","e":"b","f":1720363089}],"newContests":[]}],"contest":[]},"commits":["0a21b6027557005d33b4b1ea6514b4c694e65be4","4e59242e343fd497dc8c13f6a512e6d4f7a81007","adf573c915c15c30fcb79e6581e695ca518ef2ed","d04d24b4784f6a040460bac572b18d1406deece9","469d204e7fb6f0f84979c21143f68b410531b983","d29140d124633902574c3d6f78b76a2465ddb04b","a6a86c45be7dac1520084f1902d974d7460e11b0","fa02678e74328b17b6679aad795a3c77cafdc4e4","9b4352a89e7e3c5f909ed1bb404b8cd5479901bb","f53baff91ddc7a4d36f5626a0c3e200aa1ccd951","f868a30e0108853bc09a6b5789ea3c3cfae57456","3d65eaf8ea2e3929933cc564caf1f7720275c496","29fef74ddfd92d5dafa3f133a2c95c4c298cf765","74fe0c6efd50a9f8d80d90f54811b78036f39d1f"]}}');const b=F(k),R=b.history;b.commits;const L=y(b.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const l=new Map;var h;for(const t of(h=R.user)!=null?h:[])for(const e of t.newSubmissions){if(e.creationTime<b.startTime)continue;const s=g(e.creationTime).value;l.has(s)||l.set(s,new x),l.get(s).mergeSub(t.name,e)}const m=[...l.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const A={class:"divide-y"},N=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),V={class:"py-4"},M={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},$={class:"mt-2"},I=a("span",null," \u63D0\u4EA4\u4E86 ",-1),Y={class:"font-bold"},j=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),G={class:"font-bold"},H=a("span",null," \u4E2A\u9898\u76EE",-1),K={class:"mt-2 pt-4"},z={class:"text-gray-400"},X=w({setup(t){const e=s=>s.filter(o=>o.verdict===D.OK);return(s,o)=>{const v=E("router-link");return d(),n("div",A,[N,a("div",V,[a("div",M,[(d(!0),n(p,null,_(u(m),(f,i)=>(d(),n("div",{key:f.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:T({borderTopWidth:i>0?0:void 0,borderTopLeftRadius:i>0?0:void 0,borderTopRightRadius:i>0?0:void 0,borderBottomLeftRadius:i+1<u(m).length?0:void 0,borderBottomRightRadius:i+1<u(m).length?0:void 0})},[a("div",O,c(f.day),1),a("div",null,[(d(!0),n(p,null,_(f.record.list(),r=>(d(),n("div",$,[S(v,{to:`/user/${r.name}`},{default:C(()=>[B(c(r.name),1)]),_:2},1032,["to"]),I,a("span",Y,c(r.newSubmissions.length),1),j,a("span",G,c(e(r.newSubmissions).length),1),H]))),256))])],4)]))),128))])]),a("div",K,[a("span",z,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+c(u(L)),1)])])}}});export{X as default};
