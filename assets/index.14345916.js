import{m as y,Y as g,d as w,c as E,o as d,e as n,f as t,F as p,C as _,h as b,j as c,X as S,g as T,w as C,l as B,V as F}from"./index.643379d7.js";import{l as k}from"./load.b9090f49.js";var D=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"]],"data":{"startTime":1698557593,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":230976624,"d":"1891F","a":"A Growing Tree","e":"b","f":1698930706},{"b":"a","c":230975829,"d":"1891E","a":"Brukhovich and Exams","e":"b","f":1698930399},{"b":"a","c":230973767,"d":"1891D","a":"Suspicious logarithms","e":"b","f":1698929569},{"b":"a","c":230972683,"d":"1891C","a":"Smilo and Monsters","e":"b","f":1698929105},{"b":"a","c":230971868,"d":"1891B","a":"Deja Vu","e":"b","f":1698928752},{"b":"a","c":230971074,"d":"1891A","a":"Sorting with Twos","e":"b","f":1698928397}],"newContests":[]}],"contest":[]},"commits":["3f20550136aff47f10c127d21c757235ff53e8b2","203af500104a854cdc04d4cfe3275aeec3dcd2c5","2314e0f5f7be678abe7f38552d0cb0a172760232","adbbe729c797ebe999eba1a7a0dc66b3a8bc3717","bfd5d9945400a8f4056d17150efae4ab3eeeb697","4e0e278b0bd05b1b3cade19d8c277e05bda840b6","d57bbdfabafe4fe92585720a14a22b22db056e25","47663576b9901c8b87a5e96a63316af28ddc82f9","d60d6b4f16e6d736d9a16fbec9a7928196f124bc","5991f4b497acf4d4aa91e2fc743b0d4a144a65cb","9c9018b85bdc1df0bca640fb4f455bb163773ada","728bee44a9baff623e52c6401b7bac4d34c3e65f","e4fc3fbb6803ef963d7a2f0833b4311ded90b552","ce83af05761f36d34d8db899daad49a5e6b99fc4"]}}');const f=k(D),R=f.history;f.commits;const x=y(f.startTime);class V{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const u=new Map;var h;for(const a of(h=R.user)!=null?h:[])for(const e of a.newSubmissions){if(e.creationTime<f.startTime)continue;const s=g(e.creationTime).value;u.has(s)||u.set(s,new V),u.get(s).mergeSub(a.name,e)}const m=[...u.entries()].map(a=>({day:a[0],record:a[1]})).sort((a,e)=>e.day.localeCompare(a.day)).map(a=>({day:a.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:a.record}));const A={class:"divide-y"},M=t("h2",{class:"mb-4"},"\u5386\u53F2",-1),L={class:"py-4"},N={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},$={class:"mt-2"},j=t("span",null," \u63D0\u4EA4\u4E86 ",-1),K={class:"font-bold"},z=t("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),G={class:"font-bold"},H=t("span",null," \u4E2A\u9898\u76EE",-1),J={class:"mt-2 pt-4"},W={class:"text-gray-400"},q=w({setup(a){const e=s=>s.filter(o=>o.verdict===F.OK);return(s,o)=>{const v=E("router-link");return d(),n("div",A,[M,t("div",L,[t("div",N,[(d(!0),n(p,null,_(b(m),(l,i)=>(d(),n("div",{key:l.day,class:"relative timeline-item pl-4"},[t("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:i>0?0:void 0,borderTopLeftRadius:i>0?0:void 0,borderTopRightRadius:i>0?0:void 0,borderBottomLeftRadius:i+1<b(m).length?0:void 0,borderBottomRightRadius:i+1<b(m).length?0:void 0})},[t("div",O,c(l.day),1),t("div",null,[(d(!0),n(p,null,_(l.record.list(),r=>(d(),n("div",$,[T(v,{to:`/user/${r.name}`},{default:C(()=>[B(c(r.name),1)]),_:2},1032,["to"]),j,t("span",K,c(r.newSubmissions.length),1),z,t("span",G,c(e(r.newSubmissions).length),1),H]))),256))])],4)]))),128))])]),t("div",J,[t("span",W,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+c(b(x)),1)])])}}});export{q as default};
