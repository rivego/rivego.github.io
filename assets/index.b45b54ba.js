import{m as y,Y as v,d as E,c as w,o as c,e as n,f as s,F as m,C as h,h as f,j as i,X as C,g as D,w as S,l as B,V as M}from"./index.46353379.js";import{l as R}from"./load.b9090f49.js";var T=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["codeforces","a"],["OK","b"],["jiangly","c"],["104466B","d"],["Balloon Darts","e"],["TIME_LIMIT_EXCEEDED","f"],["104466D","g"],["DnD Dice","h"],["WRONG_ANSWER","i"],["104466M","j"],["Mischievous Math","k"],["104468A","l"],["Salahiano-utiful Arrays","m"],["1854E","n"],["Game Bundles","o"],["1854D","p"],["Michael and Hotel","q"],["1854A2","r"],["Dual (Hard Version)","s"],["1854C","t"],["Expected Destruction","u"],["1854A1","v"],["Dual (Easy Version)","w"],["1854B","x"],["Earn or Unlock","y"],["1849F","z"],["XOR Partition","A"]],"data":{"startTime":1690435984,"history":{"user":[{"a":"Kenshin2438","b":[{"c":"a","d":216672392,"e":"1829E","a":"The Lakes","f":"b","g":1690874727}],"h":[]},{"a":"c","b":[{"c":"a","d":216428713,"e":"104466K","a":"Kaldorian Knights","f":"b","g":1690711516},{"c":"a","d":216427799,"e":"d","a":"e","f":"b","g":1690711025},{"c":"a","d":216427687,"e":"d","a":"e","f":"f","g":1690710965},{"c":"a","d":216421752,"e":"104466C","a":"Cosmic Commute","f":"b","g":1690707893},{"c":"a","d":216421124,"e":"104466I","a":"Investigating Frog Behaviour on Lily Pad Patterns","f":"b","g":1690707578},{"c":"a","d":216420720,"e":"g","a":"h","f":"b","g":1690707377},{"c":"a","d":216420544,"e":"g","a":"h","f":"i","g":1690707281},{"c":"a","d":216420294,"e":"104466L","a":"Loop Invariant","f":"b","g":1690707144},{"c":"a","d":216419859,"e":"j","a":"k","f":"b","g":1690706920},{"c":"a","d":216419762,"e":"j","a":"k","f":"i","g":1690706874},{"c":"a","d":216419310,"e":"104466G","a":"German Conference for Public Counting","f":"b","g":1690706641},{"c":"a","d":216418872,"e":"104466E","a":"Eszett","f":"b","g":1690706435},{"c":"a","d":216417864,"e":"l","a":"m","f":"b","g":1690705932},{"c":"a","d":216416863,"e":"l","a":"m","f":"RUNTIME_ERROR","g":1690705396},{"c":"a","d":216416765,"e":"l","a":"m","f":"b","g":1690705346},{"c":"a","d":216415487,"e":"l","a":"m","f":"i","g":1690704659}],"h":[]},{"a":"c","b":[{"c":"a","d":216345470,"e":"n","a":"o","f":"b","g":1690652879}],"h":[]},{"a":"tourist","b":[{"c":"a","d":216321960,"e":"p","a":"q","g":1690648364},{"c":"a","d":216302036,"e":"n","a":"o","g":1690646308},{"c":"a","d":216300983,"e":"n","a":"o","f":"f","g":1690646208},{"c":"a","d":216275667,"e":"r","a":"s","f":"b","g":1690643985},{"c":"a","d":216266654,"e":"t","a":"u","f":"b","g":1690643232},{"c":"a","d":216255683,"e":"v","a":"w","f":"b","g":1690642343},{"c":"a","d":216241500,"e":"x","a":"y","f":"b","g":1690641578}],"h":[]},{"a":"c","b":[{"c":"a","d":216339026,"e":"n","a":"o","f":"i","g":1690650154},{"c":"a","d":216302623,"e":"p","a":"q","g":1690646364},{"c":"a","d":216286697,"e":"v","a":"w","f":"b","g":1690644907},{"c":"a","d":216286574,"e":"r","a":"s","f":"b","g":1690644896},{"c":"a","d":216269655,"e":"t","a":"u","f":"b","g":1690643482},{"c":"a","d":216265372,"e":"x","a":"y","f":"b","g":1690643126}],"h":[]},{"a":"c","b":[{"c":"a","d":215983324,"e":"z","a":"A","f":"b","g":1690476185},{"c":"a","d":215952856,"e":"z","a":"A","f":"b","g":1690473129},{"c":"a","d":215924453,"e":"1849E","a":"Max to the Right of Min","f":"b","g":1690470756},{"c":"a","d":215901738,"e":"1849D","a":"Array Painting","f":"b","g":1690469296},{"c":"a","d":215896251,"e":"1849C","a":"Binary String Copying","f":"b","g":1690469037},{"c":"a","d":215891011,"e":"1849B","a":"Monsters","f":"b","g":1690468833},{"c":"a","d":215887103,"e":"1849A","a":"Morning Sandwich","f":"b","g":1690468699}],"h":[]}],"contest":[]},"commits":["f4ca3fe0102080b4ae619da79cd63564609540f4","e1a193a0ee77dffe3bea992de4c60146c59336eb","2cdd398eae3ac22bf7962ef92a3f645c203e9c13","bf08200b70c617116984ab412279fc4976ce53c2","a790f57a838e0a15785add1f6feb37824a5d1eb9","d06fc8b18aa277dd53d78fcac663f43f7e0f0768","96b6df2082c7bfdf5b6a4bdb5bb0f2369441e3a5","f09a1d611f914d1fe12ad63c3a66464bbb7af97e","825db1043f44aecf3283fc379470be607c87bc8c","caf38bf188b42b9ad9cb1688e0d7bab022d52e34","d76c2923aba3627181646ed8d63217ced20349f0","83d7ab5cd2e9c442f16f13a55759a4a263e1e82c","abf23aebdb1b4fdf79178943c252465fed18f0b5","a8119943d5cd7070592d983a3ac4e3bd9e1a2061"]}}');const u=R(T),A=u.history;u.commits;const k=y(u.startTime);class x{constructor(){this.submissions=new Map}mergeSub(a,e){this.submissions.has(a)?this.submissions.get(a).push(e):this.submissions.set(a,[e])}list(){const a=[];for(const[e,o]of this.submissions)a.push({name:e,newSubmissions:o,newContests:[]});return a.sort((e,o)=>o.newSubmissions.length-e.newSubmissions.length)}}const b=new Map;var p;for(const t of(p=A.user)!=null?p:[])for(const a of t.newSubmissions){if(a.creationTime<u.startTime)continue;const e=v(a.creationTime).value;b.has(e)||b.set(e,new x),b.get(e).mergeSub(t.name,a)}const g=[...b.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,a)=>a.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const F={class:"divide-y"},L=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),I={class:"py-4"},N={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},V={class:"mt-2"},K=s("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},z=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),P={class:"font-bold"},G=s("span",null," \u4E2A\u9898\u76EE",-1),$={class:"mt-2 pt-4"},q={class:"text-gray-400"},X=E({setup(t){const a=e=>e.filter(o=>o.verdict===M.OK);return(e,o)=>{const _=w("router-link");return c(),n("div",F,[L,s("div",I,[s("div",N,[(c(!0),n(m,null,h(f(g),(l,d)=>(c(),n("div",{key:l.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:C({borderTopWidth:d>0?0:void 0,borderTopLeftRadius:d>0?0:void 0,borderTopRightRadius:d>0?0:void 0,borderBottomLeftRadius:d+1<f(g).length?0:void 0,borderBottomRightRadius:d+1<f(g).length?0:void 0})},[s("div",O,i(l.day),1),s("div",null,[(c(!0),n(m,null,h(l.record.list(),r=>(c(),n("div",V,[D(_,{to:`/user/${r.name}`},{default:S(()=>[B(i(r.name),1)]),_:2},1032,["to"]),K,s("span",j,i(r.newSubmissions.length),1),z,s("span",P,i(a(r.newSubmissions).length),1),G]))),256))])],4)]))),128))])]),s("div",$,[s("span",q,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(f(k)),1)])])}}});export{X as default};
