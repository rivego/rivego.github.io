import{m as v,Y as g,d as E,c as w,o as i,e as d,f as t,F as p,C as h,h as u,j as c,X as S,g as C,w as T,l as B,V as k}from"./index.dcfc4fe8.js";import{l as F}from"./load.b9090f49.js";var x=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"]],"data":{"startTime":1736055308,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":299895085,"d":"2057E2","a":"Another Exercise on Graphs (hard version)","e":"b","f":1736163972},{"b":"a","c":299895072,"d":"2057E1","a":"Another Exercise on Graphs (Easy Version)","e":"b","f":1736163962},{"b":"a","c":299894905,"d":"2057H","a":"Coffee Break","e":"b","f":1736163861}],"newContests":[]}],"contest":[]},"commits":["2fc2ee34987c60764ba3814af468741ac283c5a3","dded5a88a9ed8eb1942707d2d97aea3b9c1ba793","c1c5dd574645f1de322b650628b7a749644a431e","f1bf9c9a8082c6e2d41095172cefa201edef9710","e82c1957dbc80cd6d7cafa9b87ca06e2ba0f0e04","66848f49f6ca51af4e9ff9a18fb61e3f0e01b4fa","7487df637c0ed1e09d0a44f81149ab98c924c425","f2eedf06e00c7c36e72227c1e0a5ed53a2ed3aa2","53bca96b7bfaefd534aa43643bd6185d5f73b40b","189cbdea87ea294365efcf70c2e2c8f0836f9593","6f8c72872b5833d701b77683a1293559dbcf6f37","635411f0f0513a4cff551107eac777c631bca719","b60423b609bdef78e3e90e9f0a4a200e4bfd95d6","e05c19fb15a9012c602df3d0a6558dbf3d81183e"]}}');const l=F(x),R=l.history;l.commits;const D=v(l.startTime);class V{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const f=new Map;var _;for(const a of(_=R.user)!=null?_:[])for(const e of a.newSubmissions){if(e.creationTime<l.startTime)continue;const s=g(e.creationTime).value;f.has(s)||f.set(s,new V),f.get(s).mergeSub(a.name,e)}const m=[...f.entries()].map(a=>({day:a[0],record:a[1]})).sort((a,e)=>e.day.localeCompare(a.day)).map(a=>({day:a.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:a.record}));const A={class:"divide-y"},L=t("h2",{class:"mb-4"},"\u5386\u53F2",-1),M={class:"py-4"},N={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},$={class:"mt-2"},j=t("span",null," \u63D0\u4EA4\u4E86 ",-1),G={class:"font-bold"},H=t("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),K={class:"font-bold"},z=t("span",null," \u4E2A\u9898\u76EE",-1),J={class:"mt-2 pt-4"},W={class:"text-gray-400"},q=E({setup(a){const e=s=>s.filter(o=>o.verdict===k.OK);return(s,o)=>{const y=w("router-link");return i(),d("div",A,[L,t("div",M,[t("div",N,[(i(!0),d(p,null,h(u(m),(b,n)=>(i(),d("div",{key:b.day,class:"relative timeline-item pl-4"},[t("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:n>0?0:void 0,borderTopLeftRadius:n>0?0:void 0,borderTopRightRadius:n>0?0:void 0,borderBottomLeftRadius:n+1<u(m).length?0:void 0,borderBottomRightRadius:n+1<u(m).length?0:void 0})},[t("div",O,c(b.day),1),t("div",null,[(i(!0),d(p,null,h(b.record.list(),r=>(i(),d("div",$,[C(y,{to:`/user/${r.name}`},{default:T(()=>[B(c(r.name),1)]),_:2},1032,["to"]),j,t("span",G,c(r.newSubmissions.length),1),H,t("span",K,c(e(r.newSubmissions).length),1),z]))),256))])],4)]))),128))])]),t("div",J,[t("span",W,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+c(u(D)),1)])])}}});export{q as default};
