import{m as y,Y as C,d as v,c as E,o,e as i,f as s,F as m,C as h,h as r,j as n,X as w,g as S,w as T,l as D,V as A}from"./index.056aafd1.js";import{l as B}from"./load.b9090f49.js";var F=JSON.parse(`{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["OK","c"],["105184E","d"],["Breakfast II","e"],["WRONG_ANSWER","f"],["tourist","g"],["1977E","h"],["Tensor","i"],["1977D","j"],["XORificator","k"],["1977C","l"],["Nikita and LCM","m"],["1977B","n"],["Binary Colouring","o"],["1977A","p"],["Little Nikita","q"],["1973F","r"],["Maximum GCD Sum Queries","s"],["1973D","t"],["Cat, Fox and Maximum Array Split","u"],["1975H","v"],["378QAQ and Core","w"],["1975G","x"],["Zimpha Fan Club","y"]],"data":{"startTime":1716399164,"history":{"user":[{"a":"a","b":[{"c":"b","d":263020821,"e":"105184B","a":"Sequence II","f":"c","g":1716904477},{"c":"b","d":263018559,"e":"105184H","a":"Missing Iris","f":"c","g":1716903367},{"c":"b","d":263016423,"e":"105184D","a":"CCPC","f":"c","g":1716902338},{"c":"b","d":263014855,"e":"d","a":"e","f":"c","g":1716901620},{"c":"b","d":263014505,"e":"d","a":"e","f":"f","g":1716901440},{"c":"b","d":263013527,"e":"105184F","a":"3 Split","f":"c","g":1716901004},{"c":"b","d":263011134,"e":"105184G","a":"Bracelet","f":"c","g":1716899901},{"c":"b","d":263010498,"e":"105184I","a":"Subnet","f":"c","g":1716899573},{"c":"b","d":263009912,"e":"105184J","a":"Iris' Food","f":"c","g":1716899304},{"c":"b","d":263009393,"e":"105184K","a":"Welcome","f":"c","g":1716899066},{"c":"b","d":263009264,"e":"105184C","a":"Goose Goose Duck","f":"c","g":1716899007},{"c":"b","d":263008503,"e":"105184A","a":"Update","f":"c","g":1716898622}],"h":[]},{"a":"a","b":[{"c":"b","d":262792132,"e":"105160D","a":"\u65B9\u5757\u6E38\u620F","f":"c","g":1716749183},{"c":"b","d":262791737,"e":"105160C","a":"\u5C0F\u5B66\u9898","f":"c","g":1716748861},{"c":"b","d":262791611,"e":"105160B","a":"\u4FC4\u7F57\u65AF\u65B9\u5757","f":"c","g":1716748765},{"c":"b","d":262790997,"e":"105160A","a":"\u6211\u662F\u7EC4\u9898\u4EBA","f":"c","g":1716748374}],"h":[]},{"a":"g","b":[{"c":"b","d":262754165,"e":"h","a":"i","f":"c","g":1716736930},{"c":"b","d":262742727,"e":"h","a":"i","f":"f","g":1716735494},{"c":"b","d":262735956,"e":"j","a":"k","f":"c","g":1716735027},{"c":"b","d":262731600,"e":"l","a":"m","f":"c","g":1716734755},{"c":"b","d":262719839,"e":"n","a":"o","f":"c","g":1716734237},{"c":"b","d":262717136,"e":"p","a":"q","f":"c","g":1716734140}],"h":[]},{"a":"a","b":[{"c":"b","d":262770273,"e":"p","a":"q","f":"c","g":1716739745},{"c":"b","d":262770013,"e":"n","a":"o","f":"c","g":1716739694},{"c":"b","d":262769449,"e":"l","a":"m","f":"c","g":1716739583},{"c":"b","d":262767681,"e":"j","a":"k","f":"c","g":1716739230},{"c":"b","d":262763346,"e":"h","a":"i","f":"c","g":1716738411},{"c":"b","d":262740251,"e":"h","a":"i","f":"f","g":1716735273},{"c":"b","d":262669446,"e":"r","a":"s","f":"c","g":1716710048},{"c":"b","d":262669242,"e":"r","a":"s","f":"TIME_LIMIT_EXCEEDED","g":1716709941},{"c":"b","d":262665713,"e":"1973E","a":"Cat, Fox and Swaps ","f":"c","g":1716708307},{"c":"b","d":262663296,"e":"t","a":"u","f":"c","g":1716707217},{"c":"b","d":262663114,"e":"t","a":"u","f":"f","g":1716707136},{"c":"b","d":262662833,"e":"t","a":"u","f":"f","g":1716707000},{"c":"b","d":262662776,"e":"t","a":"u","f":"f","g":1716706972},{"c":"b","d":262662090,"e":"1973C","a":"Cat, Fox and Double Maximum","f":"c","g":1716706661},{"c":"b","d":262660790,"e":"1973B","a":"Cat, Fox and the Lonely Array","f":"c","g":1716706043},{"c":"b","d":262660232,"e":"1973A","a":"Chess For Three","f":"c","g":1716705760}],"h":[]},{"a":"g","b":[{"c":"b","d":262631844,"e":"v","a":"w","f":"c","g":1716681182},{"c":"b","d":262631654,"e":"v","a":"w","f":"MEMORY_LIMIT_EXCEEDED","g":1716680743},{"c":"b","d":262620370,"e":"x","a":"y","f":"c","g":1716666667}],"h":[]},{"a":"g","b":[{"c":"b","d":262612241,"e":"v","a":"w","f":"TESTING","g":1716658332},{"c":"b","d":262603334,"e":"v","a":"w","f":"f","g":1716656135},{"c":"b","d":262584629,"e":"x","a":"y","f":"c","g":1716652859},{"c":"b","d":262558741,"e":"1975E","a":"Chain Queries","f":"c","g":1716650217},{"c":"b","d":262544594,"e":"1975F","a":"Set","f":"c","g":1716649250},{"c":"b","d":262526751,"e":"1975D","a":"Paint the Tree","f":"c","g":1716648240},{"c":"b","d":262522755,"e":"1975A","a":"Bazoka and Mocha's Array","f":"c","g":1716647990},{"c":"b","d":262522159,"e":"1975C","a":"Chamo and Mocha's Array","f":"c","g":1716647942},{"c":"b","d":262521205,"e":"1975B","a":"378QAQ and Mocha's Array","f":"c","g":1716647820}],"h":[]},{"a":"a","b":[{"c":"b","d":262479409,"e":"105170I","a":"The Easiest Problem","f":"c","g":1716624688},{"c":"b","d":262478542,"e":"105170B","a":"Dfs Order 0.5","f":"c","g":1716623958},{"c":"b","d":262477496,"e":"105170A","a":"Eminor Array","f":"c","g":1716623214}],"h":[]}],"contest":[]},"commits":["727501d00d1d64b2cfef9ed475a6ec1c23725a02","09f93952459729f6d45dd284cf957b288f8d597d","de25e4512ba5b5e55d8dab6a1842018f10407696","1c6c5d0acf428739905560427ffa12620c9edf14","064e4283e222650d233012f806f9b919a285429f","c3a5b17d5332a0cd28d51e283b8b48aa6c354895","f8757fe0baf59e82ff6970f99d0e3171ff8b6abe","8cd8b8c487d60fd632ab80a553ea35a5c282273f","d5dfa8d958ae033a45f4bb4ec97f1698c5758b5b","0ea6449f49ef68e7bfe75816d6f86616939d6bdb","7eb93efa382cfd096792a71f15a1f383bca1a949","18e41893bdd4144cf25c601fd94adbd8fc96f4d0","8cec16b0e51021c88d443d7fa4c7862ff48c6810","2625a2ac72e32c461371f51187f47f51f49a0c2b"]}}`);const u=B(F),M=u.history;u.commits;const k=y(u.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,t]of this.submissions)e.push({name:a,newSubmissions:t,newContests:[]});return e.sort((a,t)=>t.newSubmissions.length-a.newSubmissions.length)}}const b=new Map;var p;for(const c of(p=M.user)!=null?p:[])for(const e of c.newSubmissions){if(e.creationTime<u.startTime)continue;const a=C(e.creationTime).value;b.has(a)||b.set(a,new x),b.get(a).mergeSub(c.name,e)}const l=[...b.entries()].map(c=>({day:c[0],record:c[1]})).sort((c,e)=>e.day.localeCompare(c.day)).map(c=>({day:c.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:c.record}));const I={class:"divide-y"},R=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),L={class:"py-4"},N={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},G={class:"mt-2"},Q=s("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},V=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),q={class:"font-bold"},W=s("span",null," \u4E2A\u9898\u76EE",-1),X={class:"mt-2 pt-4"},$={class:"text-gray-400"},P=v({setup(c){const e=a=>a.filter(t=>t.verdict===A.OK);return(a,t)=>{const _=E("router-link");return o(),i("div",I,[R,s("div",L,[s("div",N,[(o(!0),i(m,null,h(r(l),(g,d)=>(o(),i("div",{key:g.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:w({borderTopWidth:d>0?0:void 0,borderTopLeftRadius:d>0?0:void 0,borderTopRightRadius:d>0?0:void 0,borderBottomLeftRadius:d+1<r(l).length?0:void 0,borderBottomRightRadius:d+1<r(l).length?0:void 0})},[s("div",O,n(g.day),1),s("div",null,[(o(!0),i(m,null,h(g.record.list(),f=>(o(),i("div",G,[S(_,{to:`/user/${f.name}`},{default:T(()=>[D(n(f.name),1)]),_:2},1032,["to"]),Q,s("span",j,n(f.newSubmissions.length),1),V,s("span",q,n(e(f.newSubmissions).length),1),W]))),256))])],4)]))),128))])]),s("div",X,[s("span",$,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+n(r(k)),1)])])}}});export{P as default};
