import{m as v,Y as y,d as S,c as w,o as c,e as i,f as s,F as g,C as h,h as f,j as n,X as C,g as E,w as T,l as R,V as D}from"./index.a0e2d2d6.js";import{l as k}from"./load.b9090f49.js";var B=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["codeforces","a"],["1794C","b"],["Scoring Subsequences","c"],["OK","d"],["1794B","e"],["Not Dividing","f"],["WRONG_ANSWER","g"],["jiangly","h"],["1800F","i"],["Dasha and Nightmares","j"],["1796F","k"],["Strange Triples","l"],["1796A","m"],["Typical Interview Problem","n"]],"data":{"startTime":1677519318,"history":{"user":[{"a":"Reisen_","b":[{"c":"a","d":196249838,"e":"b","a":"c","f":"d","g":1678103902},{"c":"a","d":196245757,"e":"e","a":"f","f":"d","g":1678102018},{"c":"a","d":196245534,"e":"e","a":"f","f":"g","g":1678101915}],"h":[]},{"a":"h","b":[{"c":"a","d":196015876,"e":"1794E","a":"Labeling the Tree with Distances","f":"d","g":1677952759},{"c":"a","d":196006307,"e":"1794D","a":"Counting Factorizations","f":"d","g":1677951915},{"c":"a","d":196004376,"e":"b","a":"c","f":"d","g":1677951715},{"c":"a","d":196003503,"e":"e","a":"f","f":"d","g":1677951607},{"c":"a","d":196002943,"e":"1794A","a":"Prefix and Suffix Array","f":"d","g":1677951503}],"h":[]},{"a":"h","b":[{"c":"a","d":195640720,"e":"i","a":"j","f":"d","g":1677770964},{"c":"a","d":195639031,"e":"i","a":"j","f":"RUNTIME_ERROR","g":1677770855},{"c":"a","d":195636424,"e":"1800G","a":"Symmetree","f":"d","g":1677770691},{"c":"a","d":195628715,"e":"i","a":"j","f":"d","g":1677770239},{"c":"a","d":195623858,"e":"1800E2","a":"Unforgivable Curse (hard version)","f":"d","g":1677769966},{"c":"a","d":195623686,"e":"1800E1","a":"Unforgivable Curse (easy version)","f":"d","g":1677769956},{"c":"a","d":195621120,"e":"1800D","a":"Remove Two Letters","f":"d","g":1677769819},{"c":"a","d":195619486,"e":"1800C2","a":"Powering the Hero (hard version)","f":"d","g":1677769735},{"c":"a","d":195619332,"e":"1800C1","a":"Powering the Hero (easy version)","f":"d","g":1677769725},{"c":"a","d":195616760,"e":"1800B","a":"Count the Number of Pairs","f":"d","g":1677769591},{"c":"a","d":195614301,"e":"1800A","a":"Is It a Cat?","f":"d","g":1677769470}],"h":[]},{"a":"h","b":[{"c":"a","d":195450636,"e":"k","a":"l","f":"d","g":1677675108},{"c":"a","d":195448209,"e":"k","a":"l","f":"d","g":1677673941},{"c":"a","d":195439648,"e":"1796E","a":"Colored Subgraphs","f":"d","g":1677669692},{"c":"a","d":195436464,"e":"1796D","a":"Maximum Subarray","f":"d","g":1677667999},{"c":"a","d":195435737,"e":"1796C","a":"Maximum Set","f":"d","g":1677667574},{"c":"a","d":195435422,"e":"1796B","a":"Asterisk-Minor Template","f":"d","g":1677667386},{"c":"a","d":195434918,"e":"m","a":"n","f":"d","g":1677667084},{"c":"a","d":195434808,"e":"m","a":"n","f":"g","g":1677667010},{"c":"a","d":195434552,"e":"m","a":"n","f":"g","g":1677666849}],"h":[]}],"contest":[]},"commits":["61a3b867dc305ce256868a79bdfefc9eefce3552","c6592b6e91b2824a180ded281c1ed7777a39ce65","ec6544cea671c0433dc3fe15ce30d19a03d34351","30871589eea6e2a99aac418be6e6c3dc8b99cecd","16a2d90835bccac79989638a3688103d451569c0","1a0c671196b61e929625bda0faa3d7a92c644c7f","13efda7482e38431b9a7ca400936d71182a68921","334c9bbda0db3911dbb0c300c9cfcbb2db2912aa","8640c5ff101f6aa6d13a18d1da47f5ad5d9a8713","549059aeeeaef901e8cda4ba74e07f152caed82a","54269c283e73c3d51cd87f829ce2d406dfa597e6","48ae40825bb7dfd3d3955cd8f3c02df7befb9e8e","dc36505a3763633cbacf99c021c5b06e092a577d","c40cdd3d6860146cf00b7cce399117011c9869a9"]}}');const l=k(B),F=l.history;l.commits;const N=v(l.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,d]of this.submissions)e.push({name:a,newSubmissions:d,newContests:[]});return e.sort((a,d)=>d.newSubmissions.length-a.newSubmissions.length)}}const u=new Map;var p;for(const t of(p=F.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<l.startTime)continue;const a=y(e.creationTime).value;u.has(a)||u.set(a,new x),u.get(a).mergeSub(t.name,e)}const b=[...u.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const A={class:"divide-y"},M=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),j={class:"py-4"},L={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},P={class:"mt-2"},V=s("span",null," \u63D0\u4EA4\u4E86 ",-1),I={class:"font-bold"},$=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),H={class:"font-bold"},U=s("span",null," \u4E2A\u9898\u76EE",-1),W={class:"mt-2 pt-4"},z={class:"text-gray-400"},q=S({setup(t){const e=a=>a.filter(d=>d.verdict===D.OK);return(a,d)=>{const _=w("router-link");return c(),i("div",A,[M,s("div",j,[s("div",L,[(c(!0),i(g,null,h(f(b),(m,o)=>(c(),i("div",{key:m.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:C({borderTopWidth:o>0?0:void 0,borderTopLeftRadius:o>0?0:void 0,borderTopRightRadius:o>0?0:void 0,borderBottomLeftRadius:o+1<f(b).length?0:void 0,borderBottomRightRadius:o+1<f(b).length?0:void 0})},[s("div",O,n(m.day),1),s("div",null,[(c(!0),i(g,null,h(m.record.list(),r=>(c(),i("div",P,[E(_,{to:`/user/${r.name}`},{default:T(()=>[R(n(r.name),1)]),_:2},1032,["to"]),V,s("span",I,n(r.newSubmissions.length),1),$,s("span",H,n(e(r.newSubmissions).length),1),U]))),256))])],4)]))),128))])]),s("div",W,[s("span",z,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+n(f(N)),1)])])}}});export{q as default};
