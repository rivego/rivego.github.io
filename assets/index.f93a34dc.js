import{m as v,Y as y,d as S,c as E,o,e as i,f as s,F as m,C as h,h as f,j as n,X as w,g as B,w as T,l as C,V as k}from"./index.cf2a83ee.js";import{l as R}from"./load.b9090f49.js";var A=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["1841F","c"],["Monocarp and a Strategic Game","d"],["OK","e"],["WRONG_ANSWER","f"],["1841E","g"],["Fill the Matrix","h"],["1841D","i"],["Pairs of Segments","j"],["1841C","k"],["Ranom Numbers","l"],["1841B","m"],["Keep it Beautiful","n"],["1841A","o"],["Game with Board","p"],["1838F","q"],["Stuck Conveyor","r"],["1838C","s"],["No Prime Differences","t"],["1838B","u"],["Minimize Permutation Subarrays","v"]],"data":{"startTime":1686115977,"history":{"user":[{"a":"a","b":[{"c":"b","d":209529405,"e":"c","a":"d","f":"e","g":1686641103},{"c":"b","d":209529287,"e":"c","a":"d","f":"f","g":1686641019},{"c":"b","d":209529181,"e":"c","a":"d","f":"RUNTIME_ERROR","g":1686640947},{"c":"b","d":209528962,"e":"c","a":"d","f":"f","g":1686640805},{"c":"b","d":209528925,"e":"c","a":"d","f":"f","g":1686640778},{"c":"b","d":209527748,"e":"g","a":"h","f":"e","g":1686639947},{"c":"b","d":209527659,"e":"g","a":"h","f":"f","g":1686639884},{"c":"b","d":209525266,"e":"i","a":"j","f":"e","g":1686638149},{"c":"b","d":209524746,"e":"k","a":"l","f":"e","g":1686637750},{"c":"b","d":209523946,"e":"m","a":"n","f":"e","g":1686637116},{"c":"b","d":209523446,"e":"o","a":"p","f":"e","g":1686636725}],"h":[]},{"a":"tourist","b":[{"c":"b","d":209426567,"e":"c","a":"d","f":"e","g":1686582795},{"c":"b","d":209414216,"e":"g","a":"h","f":"e","g":1686581920},{"c":"b","d":209405629,"e":"i","a":"j","f":"e","g":1686581443},{"c":"b","d":209396378,"e":"k","a":"l","f":"e","g":1686581049},{"c":"b","d":209391526,"e":"m","a":"n","f":"e","g":1686580873},{"c":"b","d":209388896,"e":"o","a":"p","f":"e","g":1686580715}],"h":[]},{"a":"a","b":[{"c":"b","d":208970622,"e":"1828B","a":"Permutation Swap","f":"e","g":1686214497},{"c":"b","d":208970432,"e":"1828A","a":"Divisible Array","f":"e","g":1686214367},{"c":"b","d":208970234,"e":"1831B","a":"Array merging","f":"e","g":1686214250},{"c":"b","d":208970001,"e":"1831A","a":"Twin Permutations","f":"e","g":1686214116},{"c":"b","d":208969745,"e":"1839E","a":"Decreasing Game","f":"e","g":1686213958},{"c":"b","d":208968674,"e":"1839D","a":"Ball Sorting","f":"e","g":1686213376},{"c":"b","d":208967540,"e":"1839C","a":"Insert Zero and Invert Prefix","f":"e","g":1686212674},{"c":"b","d":208967086,"e":"1839B","a":"Lamps","f":"e","g":1686212387},{"c":"b","d":208965670,"e":"1839A","a":"The Good Array","f":"e","g":1686211558},{"c":"b","d":208965092,"e":"q","a":"r","f":"e","g":1686211184},{"c":"b","d":208965057,"e":"q","a":"r","f":"f","g":1686211158},{"c":"b","d":208964967,"e":"q","a":"r","f":"f","g":1686211105},{"c":"b","d":208964907,"e":"q","a":"r","f":"f","g":1686211064}],"h":[]},{"a":"a","b":[{"c":"b","d":208862626,"e":"1838E","a":"Count Supersequences","f":"e","g":1686121193},{"c":"b","d":208859298,"e":"1838D","a":"Bracket Walk","f":"e","g":1686118869},{"c":"b","d":208858637,"e":"s","a":"t","f":"e","g":1686118361},{"c":"b","d":208858165,"e":"s","a":"t","f":"f","g":1686117977},{"c":"b","d":208857285,"e":"u","a":"v","f":"e","g":1686117249},{"c":"b","d":208857237,"e":"u","a":"v","f":"f","g":1686117212},{"c":"b","d":208857138,"e":"u","a":"v","f":"f","g":1686117138},{"c":"b","d":208856752,"e":"1838A","a":"Blackboard List","f":"e","g":1686116827},{"c":"b","d":208856519,"e":"1840G2","a":"In Search of Truth (Hard Version)","f":"e","g":1686116619},{"c":"b","d":208856487,"e":"1840G1","a":"In Search of Truth (Easy Version)","f":"e","g":1686116591}],"h":[]}],"contest":[]},"commits":["d13e39c9c8e26b334bcb5ade104b3c3fd45fa131","a9ad7873f143f34a7342c36de7d56463e56b23be","6ac407e3f32fbdee628d361ee2bf6c8acc0dabab","d2d13ad92dc501758db9c205fe4c2769ee3fbb02","9afb5815c41f98b017115727a8bc292d2db0bc00","b77c743db02a341194738d6afa8bcd2a84dd4155","7f5c1cd587bd96959abf221f477f64b913bb1bd1","af4435b7f335dbf0cf07d5168098da4c278d6274","a654d21c55fe5886406498d7ce67f93f4d2f152d","0e8759b5e2075165453ec9ba474007535e7c4ad8","526c16036078a9808b814368ce00f47f0e47c7bb","9a19d497b4dcd035af972c76b4f4578a15bcdc89","33df2459fc9af884cd5690bfb36478a18e4b9a7c","429efe657f9f94364e5c6e00e014513d3af05a5e"]}}');const u=R(A),D=u.history;u.commits;const F=v(u.startTime);class N{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,d]of this.submissions)e.push({name:a,newSubmissions:d,newContests:[]});return e.sort((a,d)=>d.newSubmissions.length-a.newSubmissions.length)}}const b=new Map;var p;for(const t of(p=D.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<u.startTime)continue;const a=y(e.creationTime).value;b.has(a)||b.set(a,new N),b.get(a).mergeSub(t.name,e)}const g=[...b.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const M={class:"divide-y"},x=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),G={class:"py-4"},V={class:"pl-[8px] relative timeline"},q={class:"font-bold pb-2"},L={class:"mt-2"},O=s("span",null," \u63D0\u4EA4\u4E86 ",-1),P={class:"font-bold"},j=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),I={class:"font-bold"},W=s("span",null," \u4E2A\u9898\u76EE",-1),$={class:"mt-2 pt-4"},K={class:"text-gray-400"},J=S({setup(t){const e=a=>a.filter(d=>d.verdict===k.OK);return(a,d)=>{const _=E("router-link");return o(),i("div",M,[x,s("div",G,[s("div",V,[(o(!0),i(m,null,h(f(g),(l,c)=>(o(),i("div",{key:l.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:w({borderTopWidth:c>0?0:void 0,borderTopLeftRadius:c>0?0:void 0,borderTopRightRadius:c>0?0:void 0,borderBottomLeftRadius:c+1<f(g).length?0:void 0,borderBottomRightRadius:c+1<f(g).length?0:void 0})},[s("div",q,n(l.day),1),s("div",null,[(o(!0),i(m,null,h(l.record.list(),r=>(o(),i("div",L,[B(_,{to:`/user/${r.name}`},{default:T(()=>[C(n(r.name),1)]),_:2},1032,["to"]),O,s("span",P,n(r.newSubmissions.length),1),j,s("span",I,n(e(r.newSubmissions).length),1),W]))),256))])],4)]))),128))])]),s("div",$,[s("span",K,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+n(f(F)),1)])])}}});export{J as default};
