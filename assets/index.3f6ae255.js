import{m as v,Y as g,d as w,c as E,o as n,e as i,f as t,F as p,C as _,h as u,j as d,X as S,g as T,w as C,l as B,V as F}from"./index.0d83ebef.js";import{l as R}from"./load.b9090f49.js";var k=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"],["1922C","c"],["Closest Cities","d"]],"data":{"startTime":1705383191,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":242299886,"d":"1922F","a":"Replace on Segment","e":"b","f":1705594122},{"b":"a","c":242275064,"d":"1922E","a":"Increasing Subsequences","e":"b","f":1705592137},{"b":"a","c":242271532,"d":"c","a":"d","e":"b","f":1705591878},{"b":"a","c":242269674,"d":"1922D","a":"Berserk Monsters","e":"b","f":1705591751},{"b":"a","c":242265108,"d":"c","a":"d","e":"WRONG_ANSWER","f":1705591443},{"b":"a","c":242262119,"d":"1922B","a":"Forming Triangles","e":"b","f":1705591243},{"b":"a","c":242260154,"d":"1922A","a":"Tricky Template","e":"b","f":1705591115}],"newContests":[]}],"contest":[]},"commits":["b9c0cd16e7b48bc457485b506a940f04e9cf5ac4","b0f0a80ebb0f3d3239fa40aba40e3215dbea8e6c","59ef012093f164b9c102406c4995da20915a5553","1453b535da649ce8952d72d072925a8cd39e2278","ee6ccc5ef3437acbdf976a4c119a010e31dba33b","21b307affd402079e326216f326b804081d723e5","6a2a6673bec9e46cc7a41c1f11052fc91c8539f4","74d33bab98b22f2a75476e64692b5d8a6db9c6b0","d5192538a60b70e4f1e1cb3de6353f332d332cc8","33007224de0f6d865193f15520acdcce82ce51f9","1058285c99f4c3254fab6f653e288d8693b7e380","aaf6a51ea0d6599c553e84cc73b68bff7f3d1e34","ed3ac2c4301d334204d3e839314ee1940508c9a5","b537d8291ca8febe9f5b48c4d51bc07c6e658a97"]}}');const l=R(k),D=l.history;l.commits;const N=v(l.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const b=new Map;var h;for(const a of(h=D.user)!=null?h:[])for(const e of a.newSubmissions){if(e.creationTime<l.startTime)continue;const s=g(e.creationTime).value;b.has(s)||b.set(s,new x),b.get(s).mergeSub(a.name,e)}const m=[...b.entries()].map(a=>({day:a[0],record:a[1]})).sort((a,e)=>e.day.localeCompare(a.day)).map(a=>({day:a.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:a.record}));const A={class:"divide-y"},M=t("h2",{class:"mb-4"},"\u5386\u53F2",-1),O={class:"py-4"},V={class:"pl-[8px] relative timeline"},L={class:"font-bold pb-2"},$={class:"mt-2"},W=t("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},K=t("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),q={class:"font-bold"},z=t("span",null," \u4E2A\u9898\u76EE",-1),G={class:"mt-2 pt-4"},H={class:"text-gray-400"},X=w({setup(a){const e=s=>s.filter(o=>o.verdict===F.OK);return(s,o)=>{const y=E("router-link");return n(),i("div",A,[M,t("div",O,[t("div",V,[(n(!0),i(p,null,_(u(m),(f,c)=>(n(),i("div",{key:f.day,class:"relative timeline-item pl-4"},[t("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:c>0?0:void 0,borderTopLeftRadius:c>0?0:void 0,borderTopRightRadius:c>0?0:void 0,borderBottomLeftRadius:c+1<u(m).length?0:void 0,borderBottomRightRadius:c+1<u(m).length?0:void 0})},[t("div",L,d(f.day),1),t("div",null,[(n(!0),i(p,null,_(f.record.list(),r=>(n(),i("div",$,[T(y,{to:`/user/${r.name}`},{default:C(()=>[B(d(r.name),1)]),_:2},1032,["to"]),W,t("span",j,d(r.newSubmissions.length),1),K,t("span",q,d(e(r.newSubmissions).length),1),z]))),256))])],4)]))),128))])]),t("div",G,[t("span",H,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+d(u(N)),1)])])}}});export{X as default};
