import{m as y,Y as v,d as w,c as C,o as n,e as i,f as t,F as p,C as h,h as u,j as d,X as E,g as S,w as T,l as B,V as F}from"./index.e39a5811.js";import{l as R}from"./load.b9090f49.js";var k=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["OK","c"]],"data":{"startTime":1750614006,"history":{"user":[{"a":"a","b":[{"c":"b","d":325993655,"e":"1266G","a":"Permutation Concatenation","f":"c","g":1750847504}],"h":[]},{"a":"a","b":[{"c":"b","d":325763137,"e":"2112A","a":"Race","f":"c","g":1750692364},{"c":"b","d":325761717,"e":"2112B","a":"Shrinking Array","f":"c","g":1750692264},{"c":"b","d":325757925,"e":"2112C","a":"Coloring Game","f":"c","g":1750692017},{"c":"b","d":325753698,"e":"2112D","a":"Reachability and Tree","f":"c","g":1750691749},{"c":"b","d":325749531,"e":"2112E","a":"Tree Colorings","f":"c","g":1750691500},{"c":"b","d":325743701,"e":"2112F","a":"Variables and Operations","f":"c","g":1750691164}],"h":[]}],"contest":[]},"commits":["8ea049dd847221a6e27c9fadd8e5e5d92e7674fc","45df10efd7fc01181955ec57a85ee8ec4b0cd572","62e778e8a5312d6f2ccd1ffea1e5c869b1c1698f","286c4f0c688626335a4adc250c1e7cc52f3d7e55","98069915048da45be0e95f63fb4c4143d73d3ffc","ed4665a6d62c93c27721479188f4ce7822977ee7","34fc6ec8b418f9755dd9a677c4dae1d809ac0f88","5e9a321e3f8ca9ffa04df0a6c948a56da2eeb3e7","400b59b9c63404367c3fc30c43ad6a9c78a53c5f","9fea9a6e68ff18f3cd7447d06b2e712fa77767dc","5b33a88635c2f832cd7abf0d8d6fe1fe56740cad","f6724395c3828db3f21ac00a71d81407a66ac913","6db3d12f186552dbb6f10db70563acbc7f833d39"]}}');const l=R(k),D=l.history;l.commits;const V=y(l.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const f=new Map;var _;for(const a of(_=D.user)!=null?_:[])for(const e of a.newSubmissions){if(e.creationTime<l.startTime)continue;const s=v(e.creationTime).value;f.has(s)||f.set(s,new x),f.get(s).mergeSub(a.name,e)}const b=[...f.entries()].map(a=>({day:a[0],record:a[1]})).sort((a,e)=>e.day.localeCompare(a.day)).map(a=>({day:a.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:a.record}));const A={class:"divide-y"},O=t("h2",{class:"mb-4"},"\u5386\u53F2",-1),L={class:"py-4"},M={class:"pl-[8px] relative timeline"},N={class:"font-bold pb-2"},$={class:"mt-2"},j=t("span",null," \u63D0\u4EA4\u4E86 ",-1),G={class:"font-bold"},K=t("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),z={class:"font-bold"},H=t("span",null," \u4E2A\u9898\u76EE",-1),J={class:"mt-2 pt-4"},P={class:"text-gray-400"},Y=w({setup(a){const e=s=>s.filter(o=>o.verdict===F.OK);return(s,o)=>{const g=C("router-link");return n(),i("div",A,[O,t("div",L,[t("div",M,[(n(!0),i(p,null,h(u(b),(m,c)=>(n(),i("div",{key:m.day,class:"relative timeline-item pl-4"},[t("div",{class:"py-4 px-4 border rounded-md divide-y",style:E({borderTopWidth:c>0?0:void 0,borderTopLeftRadius:c>0?0:void 0,borderTopRightRadius:c>0?0:void 0,borderBottomLeftRadius:c+1<u(b).length?0:void 0,borderBottomRightRadius:c+1<u(b).length?0:void 0})},[t("div",N,d(m.day),1),t("div",null,[(n(!0),i(p,null,h(m.record.list(),r=>(n(),i("div",$,[S(g,{to:`/user/${r.name}`},{default:T(()=>[B(d(r.name),1)]),_:2},1032,["to"]),j,t("span",G,d(r.newSubmissions.length),1),K,t("span",z,d(e(r.newSubmissions).length),1),H]))),256))])],4)]))),128))])]),t("div",J,[t("span",P,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+d(u(V)),1)])])}}});export{Y as default};
