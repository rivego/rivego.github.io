import{m as y,Y as v,d as E,c as T,o as n,e as c,f as a,F as g,C as h,h as b,j as i,X as S,g as w,w as C,l as B,V as M}from"./index.248dbae5.js";import{l as V}from"./load.b9090f49.js";var A=JSON.parse(`{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["OK","c"],["2010C2","d"],["Message Transmission Error (hard version)","e"],["WRONG_ANSWER","f"],["1987F2","g"],["Interesting Problem (Hard Version)","h"],["2003C","i"],["Turtle and Good Pairs","j"]],"data":{"startTime":1724304891,"history":{"user":[{"a":"a","b":[{"c":"b","d":278588906,"e":"2010C1","a":"Message Transmission Error (easy version)","f":"c","g":1724907638},{"c":"b","d":278588893,"e":"d","a":"e","f":"c","g":1724907629},{"c":"b","d":278588861,"e":"d","a":"e","f":"f","g":1724907604},{"c":"b","d":278588649,"e":"2010B","a":"Three Brothers","f":"c","g":1724907401},{"c":"b","d":278588600,"e":"2010A","a":"Alternating Sum of Numbers","f":"c","g":1724907347}],"h":[]},{"a":"a","b":[{"c":"b","d":278543839,"e":"1987F1","a":"Interesting Problem (Easy Version)","f":"c","g":1724866119},{"c":"b","d":278543796,"e":"g","a":"h","f":"c","g":1724866100},{"c":"b","d":278541076,"e":"g","a":"h","f":"f","g":1724864577},{"c":"b","d":278520526,"e":"1987E","a":"Wonderful Tree!","f":"c","g":1724853877},{"c":"b","d":278515560,"e":"1987D","a":"World is Mine","f":"c","g":1724851647},{"c":"b","d":278514039,"e":"1987C","a":"Basil's Garden","f":"c","g":1724850937},{"c":"b","d":278513807,"e":"1987B","a":"K-Sort","f":"c","g":1724850816},{"c":"b","d":278511511,"e":"1987A","a":"Upload More RAM","f":"c","g":1724849698}],"h":[]},{"a":"a","b":[{"c":"b","d":278119095,"e":"2003F","a":"Turtle and Three Sequences","f":"c","g":1724600661},{"c":"b","d":278095422,"e":"2003E2","a":"Turtle and Inversions (Hard Version)","f":"c","g":1724598842},{"c":"b","d":278095403,"e":"2003E1","a":"Turtle and Inversions (Easy Version)","f":"c","g":1724598840},{"c":"b","d":278084368,"e":"2003D2","a":"Turtle and a MEX Problem (Hard Version)","f":"c","g":1724598148},{"c":"b","d":278077700,"e":"2003D1","a":"Turtle and a MEX Problem (Easy Version)","f":"c","g":1724597763},{"c":"b","d":278075334,"e":"i","a":"j","f":"c","g":1724597636},{"c":"b","d":278069543,"e":"i","a":"j","f":"f","g":1724597354},{"c":"b","d":278053663,"e":"2003B","a":"Turtle and Piggy Are Playing a Game 2","f":"c","g":1724596771},{"c":"b","d":278049883,"e":"2003A","a":"Turtle and Good Strings","f":"c","g":1724596669}],"h":[]},{"a":"a","b":[{"c":"b","d":277933165,"e":"2001E2","a":"Deterministic Heap (Hard Version)","f":"c","g":1724512885},{"c":"b","d":277930824,"e":"2001E1","a":"Deterministic Heap (Easy Version)","f":"c","g":1724511856},{"c":"b","d":277929584,"e":"2001D","a":"Longest Max Min Subsequence","f":"c","g":1724511317},{"c":"b","d":277927776,"e":"2001C","a":"Guess The Tree","f":"c","g":1724510545},{"c":"b","d":277927294,"e":"2001B","a":"Generate Permutation","f":"c","g":1724510351},{"c":"b","d":277926661,"e":"2001A","a":"Make All Equal","f":"c","g":1724510090}],"h":[]}],"contest":[]},"commits":["b520cbde1b987495bb913c5608dae690028d8236","4259d275945693214ec2a41343e0f962ad01b662","78686f1674595a3334e6877bb25a5a310955e68c","4d599344ec0981abd1f0a5be778bab0cdb59fc37","a0884b9bdcf67789a501dcd0fa92094a691e3a8c","ed00ad5d6086a7d9919a8bd547f778e971a9fb8b","01f20e5ddba6fc10a485bd514b3d436bf710b6dc","1449690746600925ead7e5748c8545ddda6e1395","38b07ebce6990d6a2f31f8ec5879a15e9cc95142","7437fe8bf1bdfeded7c14b1ab51936e40414593a","9dc758afc46ecec74875cb50a9f581a0f4b8f0ed","67ff79d3d2dd3ffc760203010f2476206ad68ed2","26ab5664e27244b8673fc36615caa3c631e6d5fa","072abc3bc802ba8a3f40818df5992d9ea2f8f710"]}}`);const u=V(A),D=u.history;u.commits;const F=y(u.startTime);class R{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const f=new Map;var p;for(const t of(p=D.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<u.startTime)continue;const s=v(e.creationTime).value;f.has(s)||f.set(s,new R),f.get(s).mergeSub(t.name,e)}const m=[...f.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const k={class:"divide-y"},P=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),G={class:"py-4"},H={class:"pl-[8px] relative timeline"},N={class:"font-bold pb-2"},x={class:"mt-2"},j=a("span",null," \u63D0\u4EA4\u4E86 ",-1),L={class:"font-bold"},O=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),W={class:"font-bold"},I=a("span",null," \u4E2A\u9898\u76EE",-1),$={class:"mt-2 pt-4"},q={class:"text-gray-400"},z=E({setup(t){const e=s=>s.filter(o=>o.verdict===M.OK);return(s,o)=>{const _=T("router-link");return n(),c("div",k,[P,a("div",G,[a("div",H,[(n(!0),c(g,null,h(b(m),(l,d)=>(n(),c("div",{key:l.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:d>0?0:void 0,borderTopLeftRadius:d>0?0:void 0,borderTopRightRadius:d>0?0:void 0,borderBottomLeftRadius:d+1<b(m).length?0:void 0,borderBottomRightRadius:d+1<b(m).length?0:void 0})},[a("div",N,i(l.day),1),a("div",null,[(n(!0),c(g,null,h(l.record.list(),r=>(n(),c("div",x,[w(_,{to:`/user/${r.name}`},{default:C(()=>[B(i(r.name),1)]),_:2},1032,["to"]),j,a("span",L,i(r.newSubmissions.length),1),O,a("span",W,i(e(r.newSubmissions).length),1),I]))),256))])],4)]))),128))])]),a("div",$,[a("span",q,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(b(F)),1)])])}}});export{z as default};
