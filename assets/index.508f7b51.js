import{m as y,Y as v,d as C,c as S,o as d,e as n,f as s,F as g,C as h,h as f,j as i,X as E,g as w,w as B,l as T,V as k}from"./index.8f81c06f.js";import{l as F}from"./load.b9090f49.js";var V=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["OK","c"],["tourist","d"],["2089E","e"],["Black Cat Collapse","f"],["2089B1","g"],["Canteen (Easy Version)","h"],["2089B2","i"],["Canteen (Hard Version)","j"],["2089C2","k"],["Key of Like (Hard Version)","l"],["2089C1","m"],["Key of Like (Easy Version)","n"],["2089A","o"],["Simple Permutation","p"]],"data":{"startTime":1742405906,"history":{"user":[{"a":"a","b":[{"c":"b","d":312448138,"e":"2091G","a":"Gleb and Boating","f":"c","g":1742919607},{"c":"b","d":312437986,"e":"2091F","a":"Igor and Mountain","f":"c","g":1742918731},{"c":"b","d":312430861,"e":"2091E","a":"Interesting Ratio","f":"c","g":1742918158},{"c":"b","d":312429055,"e":"2091D","a":"Place of the Olympiad","f":"c","g":1742918027},{"c":"b","d":312426825,"e":"2091C","a":"Combination Lock","f":"c","g":1742917864},{"c":"b","d":312423410,"e":"2091B","a":"Team Training","f":"c","g":1742917629},{"c":"b","d":312421332,"e":"2091A","a":"Olympiad Date","f":"c","g":1742917491}],"h":[]},{"a":"d","b":[{"c":"b","d":312117803,"e":"e","a":"f","f":"c","g":1742760707},{"c":"b","d":312117703,"e":"e","a":"f","f":"c","g":1742760627}],"h":[]},{"a":"d","b":[{"c":"b","d":312026130,"e":"e","a":"f","f":"c","g":1742716286},{"c":"b","d":312005425,"e":"2089D","a":"Conditional Operators","f":"c","g":1742712995},{"c":"b","d":311991638,"e":"g","a":"h","f":"c","g":1742711067},{"c":"b","d":311991504,"e":"i","a":"j","f":"c","g":1742711048},{"c":"b","d":311986572,"e":"k","a":"l","f":"c","g":1742710436},{"c":"b","d":311971941,"e":"m","a":"n","f":"c","g":1742708933},{"c":"b","d":311962756,"e":"o","a":"p","f":"c","g":1742708347}],"h":[]},{"a":"a","b":[{"c":"b","d":312027793,"e":"e","a":"f","f":"c","g":1742716544},{"c":"b","d":311993140,"e":"k","a":"l","f":"c","g":1742711264},{"c":"b","d":311983107,"e":"m","a":"n","f":"c","g":1742710006},{"c":"b","d":311977257,"e":"g","a":"h","f":"c","g":1742709385},{"c":"b","d":311977008,"e":"i","a":"j","f":"c","g":1742709363},{"c":"b","d":311963536,"e":"o","a":"p","f":"c","g":1742708387}],"h":[]},{"a":"a","b":[{"c":"b","d":311859252,"e":"2085F1","a":"Serval and Colorful Array (Easy Version)","f":"c","g":1742657823},{"c":"b","d":311859049,"e":"2085F2","a":"Serval and Colorful Array (Hard Version)","f":"c","g":1742657805},{"c":"b","d":311852333,"e":"2085E","a":"Serval and Modulo","f":"c","g":1742657248},{"c":"b","d":311846274,"e":"2085D","a":"Serval and Kaitenzushi Buffet","f":"c","g":1742656797},{"c":"b","d":311843782,"e":"2085C","a":"Serval and The Formula","f":"c","g":1742656616},{"c":"b","d":311842673,"e":"2085B","a":"Serval and Final MEX","f":"c","g":1742656540},{"c":"b","d":311840220,"e":"2085A","a":"Serval and String Theory","f":"c","g":1742656368}],"h":[]}],"contest":[]},"commits":["7f0e7ccf43553ca90659a57bdf898f37a990d77f","e9c456aada6fcc1636689c6130cf0dfa83b1f28c","f765cf5b24c39c4a76335921b01b0a546efc036f","bdaf714c574779f628416436a48bd2c546151b79","8a8ef19072c4101774404d6d1c68b8fdf4d8426f","660e3eca090d46b30dbcb1c4601e344f2c07171f","5e29d95f457a0d01fec59d1986619e1e3b5bf3fd","4efb8532833a95051d87e881a455c8fcc76e3043","52b9b9d6adc56ed9a5dc05f812e48e7df6e5e696","3a30fba84d960b29f63b98a642c35eeb2fbe75cd","53cc6ed38ebb994f9b7e7279bf33eb97869ee6ca","572bac4f4ae5b76a702920f01b1619f6019eed33","cb3da3a6f041b7f1bc0035675ffd0d4c682eba65","a941c0c9237b317dbde22245a84e6086d5e06130"]}}');const l=F(V),D=l.history;l.commits;const A=y(l.startTime);class R{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,c]of this.submissions)e.push({name:a,newSubmissions:c,newContests:[]});return e.sort((a,c)=>c.newSubmissions.length-a.newSubmissions.length)}}const b=new Map;var p;for(const t of(p=D.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<l.startTime)continue;const a=v(e.creationTime).value;b.has(a)||b.set(a,new R),b.get(a).mergeSub(t.name,e)}const m=[...b.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const L={class:"divide-y"},M=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),O={class:"py-4"},j={class:"pl-[8px] relative timeline"},x={class:"font-bold pb-2"},K={class:"mt-2"},H=s("span",null," \u63D0\u4EA4\u4E86 ",-1),N={class:"font-bold"},$=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),z={class:"font-bold"},G=s("span",null," \u4E2A\u9898\u76EE",-1),I={class:"mt-2 pt-4"},P={class:"text-gray-400"},W=C({setup(t){const e=a=>a.filter(c=>c.verdict===k.OK);return(a,c)=>{const _=S("router-link");return d(),n("div",L,[M,s("div",O,[s("div",j,[(d(!0),n(g,null,h(f(m),(u,o)=>(d(),n("div",{key:u.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:E({borderTopWidth:o>0?0:void 0,borderTopLeftRadius:o>0?0:void 0,borderTopRightRadius:o>0?0:void 0,borderBottomLeftRadius:o+1<f(m).length?0:void 0,borderBottomRightRadius:o+1<f(m).length?0:void 0})},[s("div",x,i(u.day),1),s("div",null,[(d(!0),n(g,null,h(u.record.list(),r=>(d(),n("div",K,[w(_,{to:`/user/${r.name}`},{default:B(()=>[T(i(r.name),1)]),_:2},1032,["to"]),H,s("span",N,i(r.newSubmissions.length),1),$,s("span",z,i(e(r.newSubmissions).length),1),G]))),256))])],4)]))),128))])]),s("div",I,[s("span",P,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(f(A)),1)])])}}});export{W as default};
