import{m as y,Y as v,d as w,c as E,o as c,e as i,f as a,F as g,C as h,h as b,j as n,X as S,g as B,w as R,l as T,V as C}from"./index.aaa8da7f.js";import{l as k}from"./load.b9090f49.js";var A=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["tourist","a"],["codeforces","b"],["1841E","c"],["Fill the Matrix","d"],["OK","e"],["jiangly","f"],["1841F","g"],["Monocarp and a Strategic Game","h"],["WRONG_ANSWER","i"],["1841D","j"],["Pairs of Segments","k"],["1841C","l"],["Ranom Numbers","m"],["1841B","n"],["Keep it Beautiful","o"],["1841A","p"],["Game with Board","q"],["1838F","r"],["Stuck Conveyor","s"]],"data":{"startTime":1686202398,"history":{"user":[{"a":"a","b":[{"c":"b","d":209706350,"e":"c","a":"d","f":"e","g":1686780531}],"h":[]},{"a":"f","b":[{"c":"b","d":209529405,"e":"g","a":"h","f":"e","g":1686641103},{"c":"b","d":209529287,"e":"g","a":"h","f":"i","g":1686641019},{"c":"b","d":209529181,"e":"g","a":"h","f":"RUNTIME_ERROR","g":1686640947},{"c":"b","d":209528962,"e":"g","a":"h","f":"i","g":1686640805},{"c":"b","d":209528925,"e":"g","a":"h","f":"i","g":1686640778},{"c":"b","d":209527748,"e":"c","a":"d","f":"e","g":1686639947},{"c":"b","d":209527659,"e":"c","a":"d","f":"i","g":1686639884},{"c":"b","d":209525266,"e":"j","a":"k","f":"e","g":1686638149},{"c":"b","d":209524746,"e":"l","a":"m","f":"e","g":1686637750},{"c":"b","d":209523946,"e":"n","a":"o","f":"e","g":1686637116},{"c":"b","d":209523446,"e":"p","a":"q","f":"e","g":1686636725}],"h":[]},{"a":"a","b":[{"c":"b","d":209426567,"e":"g","a":"h","f":"e","g":1686582795},{"c":"b","d":209414216,"e":"c","a":"d","f":"e","g":1686581920},{"c":"b","d":209405629,"e":"j","a":"k","f":"e","g":1686581443},{"c":"b","d":209396378,"e":"l","a":"m","f":"e","g":1686581049},{"c":"b","d":209391526,"e":"n","a":"o","f":"e","g":1686580873},{"c":"b","d":209388896,"e":"p","a":"q","f":"e","g":1686580715}],"h":[]},{"a":"f","b":[{"c":"b","d":208970622,"e":"1828B","a":"Permutation Swap","f":"e","g":1686214497},{"c":"b","d":208970432,"e":"1828A","a":"Divisible Array","f":"e","g":1686214367},{"c":"b","d":208970234,"e":"1831B","a":"Array merging","f":"e","g":1686214250},{"c":"b","d":208970001,"e":"1831A","a":"Twin Permutations","f":"e","g":1686214116},{"c":"b","d":208969745,"e":"1839E","a":"Decreasing Game","f":"e","g":1686213958},{"c":"b","d":208968674,"e":"1839D","a":"Ball Sorting","f":"e","g":1686213376},{"c":"b","d":208967540,"e":"1839C","a":"Insert Zero and Invert Prefix","f":"e","g":1686212674},{"c":"b","d":208967086,"e":"1839B","a":"Lamps","f":"e","g":1686212387},{"c":"b","d":208965670,"e":"1839A","a":"The Good Array","f":"e","g":1686211558},{"c":"b","d":208965092,"e":"r","a":"s","f":"e","g":1686211184},{"c":"b","d":208965057,"e":"r","a":"s","f":"i","g":1686211158},{"c":"b","d":208964967,"e":"r","a":"s","f":"i","g":1686211105},{"c":"b","d":208964907,"e":"r","a":"s","f":"i","g":1686211064}],"h":[]}],"contest":[]},"commits":["788bf9ec60eacfcb2e6e935771ab95da65ffcd79","8df5f4030c1aabe185661d652955b6b42afcc376","d13e39c9c8e26b334bcb5ade104b3c3fd45fa131","a9ad7873f143f34a7342c36de7d56463e56b23be","6ac407e3f32fbdee628d361ee2bf6c8acc0dabab","d2d13ad92dc501758db9c205fe4c2769ee3fbb02","9afb5815c41f98b017115727a8bc292d2db0bc00","b77c743db02a341194738d6afa8bcd2a84dd4155","7f5c1cd587bd96959abf221f477f64b913bb1bd1","af4435b7f335dbf0cf07d5168098da4c278d6274","a654d21c55fe5886406498d7ce67f93f4d2f152d","0e8759b5e2075165453ec9ba474007535e7c4ad8","526c16036078a9808b814368ce00f47f0e47c7bb","9a19d497b4dcd035af972c76b4f4578a15bcdc89"]}}');const u=k(A),F=u.history;u.commits;const D=y(u.startTime);class N{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,d]of this.submissions)e.push({name:s,newSubmissions:d,newContests:[]});return e.sort((s,d)=>d.newSubmissions.length-s.newSubmissions.length)}}const f=new Map;var p;for(const t of(p=F.user)!=null?p:[])for(const e of t.newSubmissions){if(e.creationTime<u.startTime)continue;const s=v(e.creationTime).value;f.has(s)||f.set(s,new N),f.get(s).mergeSub(t.name,e)}const m=[...f.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const x={class:"divide-y"},M=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),O={class:"py-4"},j={class:"pl-[8px] relative timeline"},G={class:"font-bold pb-2"},L={class:"mt-2"},V=a("span",null," \u63D0\u4EA4\u4E86 ",-1),P={class:"font-bold"},$=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),q={class:"font-bold"},I=a("span",null," \u4E2A\u9898\u76EE",-1),K={class:"mt-2 pt-4"},W={class:"text-gray-400"},J=w({setup(t){const e=s=>s.filter(d=>d.verdict===C.OK);return(s,d)=>{const _=E("router-link");return c(),i("div",x,[M,a("div",O,[a("div",j,[(c(!0),i(g,null,h(b(m),(l,o)=>(c(),i("div",{key:l.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:o>0?0:void 0,borderTopLeftRadius:o>0?0:void 0,borderTopRightRadius:o>0?0:void 0,borderBottomLeftRadius:o+1<b(m).length?0:void 0,borderBottomRightRadius:o+1<b(m).length?0:void 0})},[a("div",G,n(l.day),1),a("div",null,[(c(!0),i(g,null,h(l.record.list(),r=>(c(),i("div",L,[B(_,{to:`/user/${r.name}`},{default:R(()=>[T(n(r.name),1)]),_:2},1032,["to"]),V,a("span",P,n(r.newSubmissions.length),1),$,a("span",q,n(e(r.newSubmissions).length),1),I]))),256))])],4)]))),128))])]),a("div",K,[a("span",W,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+n(b(D)),1)])])}}});export{J as default};
