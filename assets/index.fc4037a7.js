import{m as y,Y as v,d as E,c as T,o as n,e as d,f as s,F as m,C as h,h as f,j as i,X as C,g as S,w,l as F,V as B}from"./index.628f3b42.js";import{l as D}from"./load.b9090f49.js";var M=JSON.parse(`{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["OK","c"],["1979C","d"],["Earning on Bets","e"],["WRONG_ANSWER","f"],["105173F","g"],["Factor","h"],["105173C","i"],["Ring","j"],["105173I","k"],["Password","l"]],"data":{"startTime":1717133707,"history":{"user":[{"a":"a","b":[{"c":"b","d":264460743,"e":"1979F","a":"Kostyanych's Theorem","f":"c","g":1717688436},{"c":"b","d":264441088,"e":"d","a":"e","f":"c","g":1717686621},{"c":"b","d":264440848,"e":"1979E","a":"Manhattan Triangle","f":"c","g":1717686601},{"c":"b","d":264429339,"e":"1979D","a":"Fixing a Binary String","f":"c","g":1717685737},{"c":"b","d":264420101,"e":"d","a":"e","f":"f","g":1717685153},{"c":"b","d":264412912,"e":"1979B","a":"XOR Sequences","f":"c","g":1717684815},{"c":"b","d":264408629,"e":"1979A","a":"Guess the Maximum","f":"c","g":1717684644}],"h":[]},{"a":"a","b":[{"c":"b","d":264255804,"e":"g","a":"h","f":"c","g":1717588871},{"c":"b","d":264255189,"e":"i","a":"j","f":"c","g":1717588575},{"c":"b","d":264254893,"e":"i","a":"j","f":"MEMORY_LIMIT_EXCEEDED","g":1717588439},{"c":"b","d":264252212,"e":"105173B","a":"Charging Station","f":"c","g":1717587310},{"c":"b","d":264250152,"e":"105173G","a":"Diamond","f":"c","g":1717586453},{"c":"b","d":264247508,"e":"105173H","a":"Meet","f":"c","g":1717585314},{"c":"b","d":264246129,"e":"105173K","a":"Tasks","f":"c","g":1717584651},{"c":"b","d":264243884,"e":"105173M","a":"House","f":"c","g":1717583609},{"c":"b","d":264243092,"e":"105173L","a":"Bracket Generation","f":"c","g":1717583224},{"c":"b","d":264241424,"e":"k","a":"l","f":"c","g":1717582388},{"c":"b","d":264239866,"e":"k","a":"l","f":"f","g":1717581667},{"c":"b","d":264239213,"e":"g","a":"h","f":"c","g":1717581369},{"c":"b","d":264238405,"e":"105173E","a":"Checksum","f":"c","g":1717581001},{"c":"b","d":264237804,"e":"105173D","a":"nIM gAME","f":"c","g":1717580736},{"c":"b","d":264237331,"e":"105173A","a":"Paper Watering","f":"c","g":1717580501},{"c":"b","d":264236765,"e":"105173J","a":"Breakfast","f":"c","g":1717580237}],"h":[]},{"a":"a","b":[{"c":"b","d":263960334,"e":"1980G","a":"Yasya and the Mysterious Tree","f":"c","g":1717428181},{"c":"b","d":263946995,"e":"1980F1","a":"Field Division (easy version)","f":"c","g":1717427459},{"c":"b","d":263946858,"e":"1980F2","a":"Field Division (hard version)","f":"c","g":1717427451},{"c":"b","d":263926053,"e":"1980E","a":"Permutation of Rows and Columns","f":"c","g":1717426504},{"c":"b","d":263919047,"e":"1980D","a":"GCD-sequence","f":"c","g":1717426214},{"c":"b","d":263918944,"e":"1980C","a":"Sofia and the Lost Operations","f":"c","g":1717426211},{"c":"b","d":263905157,"e":"1980B","a":"Choosing Cubes","f":"c","g":1717425709},{"c":"b","d":263900617,"e":"1980A","a":"Problem Generator","f":"c","g":1717425586}],"h":[]},{"a":"a","b":[{"c":"b","d":263507630,"e":"1981F","a":"Turtle and Paths on a Tree","f":"c","g":1717163528},{"c":"b","d":263502702,"e":"1981E","a":"Turtle and Intersected Segments","f":"c","g":1717160968},{"c":"b","d":263501915,"e":"1981D","a":"Turtle and Multiplication","f":"c","g":1717160586},{"c":"b","d":263500214,"e":"1981C","a":"Turtle and an Incomplete Sequence","f":"c","g":1717159806},{"c":"b","d":263499432,"e":"1981B","a":"Turtle and an Infinite Sequence","f":"c","g":1717159468},{"c":"b","d":263499126,"e":"1981A","a":"Turtle and Piggy Are Playing a Game","f":"c","g":1717159334}],"h":[]}],"contest":[]},"commits":["53f5bbc0ca70b4e9ecab49d32ef1d29624b34724","e6942d52b6ac9942147a4c7c82e76709aa4fe4e7","24ee3bf40e5af1874b94a2c6973c63ee9dc23a8c","ea293c6d44e7325331141a00b0a1833ef906f5d8","335f3accdf1dbb08de1553904183528de1bcab77","0dc3816e77833f48d0f29ec44f4592e28f266a12","81732ab0032e98df30efc6dd646f4632790916a3","6fd6ac1a3e1575478eaaf19182a701c8ef2df5cc","5e2c6001c42c88b502f8ac96163085f2270e2204","642d61d7154da46dc40eeabf549cf5f628569a90","544f1b9e47c41e66c9de1c5d4cda73dc196647d9","54adf8fa893ab50ec59b763cae91f37333fbf74e","4ce65c8e5bc7dac491cf479b4525bf165a2b25c0","0f4e92959b310f8c6c5b47c31e3440e5aa259285"]}}`);const u=D(M),k=u.history;u.commits;const R=y(u.startTime);class A{constructor(){this.submissions=new Map}mergeSub(e,a){this.submissions.has(e)?this.submissions.get(e).push(a):this.submissions.set(e,[a])}list(){const e=[];for(const[a,t]of this.submissions)e.push({name:a,newSubmissions:t,newContests:[]});return e.sort((a,t)=>t.newSubmissions.length-a.newSubmissions.length)}}const b=new Map;var p;for(const c of(p=k.user)!=null?p:[])for(const e of c.newSubmissions){if(e.creationTime<u.startTime)continue;const a=v(e.creationTime).value;b.has(a)||b.set(a,new A),b.get(a).mergeSub(c.name,e)}const g=[...b.entries()].map(c=>({day:c[0],record:c[1]})).sort((c,e)=>e.day.localeCompare(c.day)).map(c=>({day:c.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:c.record}));const G={class:"divide-y"},O=s("h2",{class:"mb-4"},"\u5386\u53F2",-1),x={class:"py-4"},I={class:"pl-[8px] relative timeline"},L={class:"font-bold pb-2"},P={class:"mt-2"},N=s("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},V=s("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),q={class:"font-bold"},K=s("span",null," \u4E2A\u9898\u76EE",-1),W={class:"mt-2 pt-4"},$={class:"text-gray-400"},Y=E({setup(c){const e=a=>a.filter(t=>t.verdict===B.OK);return(a,t)=>{const _=T("router-link");return n(),d("div",G,[O,s("div",x,[s("div",I,[(n(!0),d(m,null,h(f(g),(l,o)=>(n(),d("div",{key:l.day,class:"relative timeline-item pl-4"},[s("div",{class:"py-4 px-4 border rounded-md divide-y",style:C({borderTopWidth:o>0?0:void 0,borderTopLeftRadius:o>0?0:void 0,borderTopRightRadius:o>0?0:void 0,borderBottomLeftRadius:o+1<f(g).length?0:void 0,borderBottomRightRadius:o+1<f(g).length?0:void 0})},[s("div",L,i(l.day),1),s("div",null,[(n(!0),d(m,null,h(l.record.list(),r=>(n(),d("div",P,[S(_,{to:`/user/${r.name}`},{default:w(()=>[F(i(r.name),1)]),_:2},1032,["to"]),N,s("span",j,i(r.newSubmissions.length),1),V,s("span",q,i(e(r.newSubmissions).length),1),K]))),256))])],4)]))),128))])]),s("div",W,[s("span",$,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+i(f(R)),1)])])}}});export{Y as default};
