import{Q as k,d as O,G as P,K as B,v as f,y as $,o as v,e as b,g as D,f as I,j as V,h as x,k as H,R as u,V as L,D as F}from"./index.6681e827.js";import{l as M}from"./load.b9090f49.js";import{c as G}from"./codeforces.daec6e4d.js";import{_ as J,h as K,f as Q}from"./Contest.c081463e.js";import"./c-table.67315e51.js";import"./user-link.d504fd2d.js";import"./cf-rating-color.236959c0.js";import"./nc-rating-color.39d1efce.js";function W(){const r=k("loading");return{start(){r.value=!0},end(){r.value=!1}}}const q=M(G),N=new Map;for(const r of q)r.type.startsWith("codeforces")&&N.set(r.id,r);function z(r){var m;return(m=N.get(+r))!=null?m:null}const _="https://codeforces.com/api/",X={key:0},Y={key:1,class:"divide-y"},Z=I("h2",{class:"mb-2"},"\u9519\u8BEF",-1),ee={class:"pt-2"},pe=O({setup(r){const m=P(),R=B(),i=f(null),y=f(!1),g=f(!1),{start:w,end:A}=W(),h=f(!1),T=async s=>{var a,S;if(h.value)return;h.value=!0;const o=new URL(_+"contest.standings");o.searchParams.append("contestId",""+s.id),o.searchParams.append("handles",K.map(({h:e})=>e).join(";")),o.searchParams.append("showUnofficial","true");const{result:n}=await(await fetch(o.toString())).json();let c=0;s.problems=n.problems;for(const e of n.problems)e.problemUrl=`https://codeforces.com/contest/${e.contestId}/problem/${e.index}`;s.standings=[];for(const e of n.rows){if(e.party.participantType!==u.CONTESTANT&&e.party.participantType!==u.VIRTUAL&&e.party.participantType!==u.OUT_OF_COMPETITION&&e.party.participantType!==u.PRACTICE)continue;e.party.participantType!==u.PRACTICE&&c++;const E=e.problemResults.reduce((t,p)=>{var d,l;return p.points===0?t:t+((d=p.bestSubmissionTimeSeconds)!=null?d:0)+20*((l=p.rejectedAttemptCount)!=null?l:0)},0),C=(a=e.party.participantTime)!=null?a:s.startTime;s.standings.push({author:{members:e.party.members.map(t=>t.handle),teamName:(S=e.party.teamName)!=null?S:Q(e.party.members[0].handle),participantTime:C,participantType:e.party.participantType},rank:e.rank,solved:e.problemResults.filter(t=>t.points>0).length,penalty:E,submissions:e.problemResults.map((t,p)=>{const d=t.bestSubmissionTimeSeconds+C,l=t.bestSubmissionTimeSeconds;return t.points>0?{id:-1,creationTime:d,relativeTime:l,problemIndex:p,verdict:L.OK,dirty:t.rejectedAttemptCount}:t.rejectedAttemptCount>0?{id:-1,creationTime:d,relativeTime:l,problemIndex:p,dirty:t.rejectedAttemptCount}:null}).filter(t=>t!==null)})}s.participantNumber=c,h.value=!1},U=async s=>{const o=new URL(_+"contest.list"),n="codeforces/contest.list",{result:c}=sessionStorage.getItem(n)?{result:JSON.parse(sessionStorage.getItem(n))}:await(await fetch(o.toString())).json();sessionStorage.getItem(n)||sessionStorage.setItem(n,JSON.stringify(c));for(const a of c)if(a.id===s)return{type:"codeforces",name:a.name,startTime:a.startTimeSeconds,duration:a.durationSeconds,participantNumber:0,id:a.id,phase:a.phase,contestUrl:`https://codeforces.com/contest/${a.id}`,standingsUrl:`https://codeforces.com/contest/${a.id}/standings`}},j=()=>{T(i.value)};return $(()=>m.params,async s=>{if(s.id){w();const o=z(+s.id);if(o!==null)i.value=o,await T(i.value),document.title=`${o.name} - CPany`;else{const n=await U(+s.id);if(n)g.value=!0,i.value=n,await T(i.value),document.title=`${n.name} - CPany`;else{y.value=!0;const a=setTimeout(()=>R.replace({name:"Home"}),3e3);F(()=>clearTimeout(a))}}A()}},{immediate:!0}),(s,o)=>(v(),b("div",null,[i.value&&!y.value?(v(),b("div",X,[D(J,{contest:i.value,dynamic:g.value,onRefresh:j},null,8,["contest","dynamic"])])):y.value?(v(),b("div",Y,[Z,I("p",ee,"\u672A\u627E\u5230 ID \u4E3A "+V(x(m).params.id)+" \u7684 Codeforces \u6BD4\u8D5B",1)])):H("v-if",!0)]))}});export{pe as default};
