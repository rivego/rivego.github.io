import{m as v,Y as g,d as w,c as E,o as i,e as d,f as a,F as p,C as _,h as u,j as c,X as C,g as S,w as T,l as B,V as F}from"./index.cd83acbb.js";import{l as A}from"./load.b9090f49.js";var R=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"]],"data":{"startTime":1746293730,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":318610725,"d":"2107A","a":"LRC and VIP","e":"b","f":1746528995},{"b":"a","c":318610553,"d":"2107B","a":"Apples in Boxes","e":"b","f":1746528887},{"b":"a","c":318610118,"d":"2107C","a":"Maximum Subarray Sum","e":"b","f":1746528655},{"b":"a","c":318609473,"d":"2107D","a":"Apple Tree Traversing","e":"b","f":1746528297},{"b":"a","c":318607190,"d":"2107E","a":"Ain and Apple Tree","e":"b","f":1746526807},{"b":"a","c":318606383,"d":"2107F1","a":"Cycling (Easy Version)","e":"b","f":1746526282},{"b":"a","c":318606108,"d":"2107F2","a":"Cycling (Hard Version)","e":"b","f":1746526091}],"newContests":[]}],"contest":[]},"commits":["dea672de80e993f9b22d32e09ca19e63f94e1ba3","46fa28e4572c8743b8d5870ec893fbeeea84d40f","a02da2f581451e39b004d9a13eaa7c93747ddef7","eef8677a58fa6a1859b3a6728cd6a860ebc2434f","bdfaff6ef83ad47b29ebc181edea3ed449a8cc41","777796e2d77a9817a9954700c3eb8c42ebbff2fe","e46bdc7d88751ea05c778dfb31a41e9510f9f90a","a0f4ccff51987ca6298f692685a96aadcf8c6093","af49e482c138c2dfca402f184ed8a6817272545e","9f303512da348549f51130beeb95c23ab1e48b90","bd28ab7a7b5631e53af099270ca42dc850230681","8ca2e38623cde319ae320514bdab26aa2afa564f","0b29c2f7bc51e27143fc20e54cd6202ec8a0bb70","32d9d71ae8bddd04dcf47e5264e20296d76bc30e"]}}');const l=A(R),V=l.history;l.commits;const k=v(l.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const b=new Map;var h;for(const t of(h=V.user)!=null?h:[])for(const e of t.newSubmissions){if(e.creationTime<l.startTime)continue;const s=g(e.creationTime).value;b.has(s)||b.set(s,new x),b.get(s).mergeSub(t.name,e)}const m=[...b.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const D={class:"divide-y"},L=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),M={class:"py-4"},N={class:"pl-[8px] relative timeline"},O={class:"font-bold pb-2"},$={class:"mt-2"},j=a("span",null," \u63D0\u4EA4\u4E86 ",-1),H={class:"font-bold"},K=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),z={class:"font-bold"},I=a("span",null," \u4E2A\u9898\u76EE",-1),J={class:"mt-2 pt-4"},P={class:"text-gray-400"},Y=w({setup(t){const e=s=>s.filter(o=>o.verdict===F.OK);return(s,o)=>{const y=E("router-link");return i(),d("div",D,[L,a("div",M,[a("div",N,[(i(!0),d(p,null,_(u(m),(f,n)=>(i(),d("div",{key:f.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:C({borderTopWidth:n>0?0:void 0,borderTopLeftRadius:n>0?0:void 0,borderTopRightRadius:n>0?0:void 0,borderBottomLeftRadius:n+1<u(m).length?0:void 0,borderBottomRightRadius:n+1<u(m).length?0:void 0})},[a("div",O,c(f.day),1),a("div",null,[(i(!0),d(p,null,_(f.record.list(),r=>(i(),d("div",$,[S(y,{to:`/user/${r.name}`},{default:T(()=>[B(c(r.name),1)]),_:2},1032,["to"]),j,a("span",H,c(r.newSubmissions.length),1),K,a("span",z,c(e(r.newSubmissions).length),1),I]))),256))])],4)]))),128))])]),a("div",J,[a("span",P,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+c(u(k)),1)])])}}});export{Y as default};
