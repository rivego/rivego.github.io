import{m as v,Y as g,d as w,c as E,o as n,e as c,f as t,F as h,C as _,h as u,j as d,X as S,g as C,w as F,l as T,V as B}from"./index.659b1419.js";import{l as D}from"./load.b9090f49.js";var R=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["1927G","b"],["Paint Charges","c"],["OK","d"]],"data":{"startTime":1706851964,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":245138372,"d":"b","a":"c","e":"d","f":1707232871},{"b":"a","c":245133815,"d":"b","a":"c","e":"WRONG_ANSWER","f":1707232656},{"b":"a","c":245116759,"d":"1927F","a":"Microcycle","e":"d","f":1707231930},{"b":"a","c":245107510,"d":"1927E","a":"Klever Permutation","e":"d","f":1707231586},{"b":"a","c":245098299,"d":"1927D","a":"Find the Different Ones!","e":"d","f":1707231307},{"b":"a","c":245094323,"d":"1927C","a":"Choose the Different Ones!","e":"d","f":1707231206},{"b":"a","c":245085018,"d":"1927B","a":"Following the String","e":"d","f":1707231004},{"b":"a","c":245081461,"d":"1927A","a":"Make it White","e":"d","f":1707230910}],"newContests":[]}],"contest":[]},"commits":["456889f6044682a051eed5a6bf60ce32513212ba","c9e3febb07b295c808803af6f59d517a27644d72","ed0e2f973350124c08fffb55cb6d2485a03dbc14","d3b967cb5ccd2b1eacc4f30cbb8140b5ec84123b","62fe24d73fe2e48ed1f0814e822e9fdd29656fea","278b1b61ad44c0d13294c616a115f9e1fb60ab4e","90a66888564f26eab1f56156227b5ff1185dd798","26b7c8d55f04ed7e6672bfcdb2665b6d2b0cff73","1bce21b922761f995e9c643c69cc55bd969e3ae4","ea16352908f8004555a9c9c04fd764ce7a695ee6","a9cd773063215105cfef10375d67f2914eb9da20","b07733064758c28e514acdf050a860d30c0001cc","962fae8087ac1ce2ef85d09f97c7d7621e84a428"]}}');const l=D(R),k=l.history;l.commits;const O=v(l.startTime);class M{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const f=new Map;var p;for(const a of(p=k.user)!=null?p:[])for(const e of a.newSubmissions){if(e.creationTime<l.startTime)continue;const s=g(e.creationTime).value;f.has(s)||f.set(s,new M),f.get(s).mergeSub(a.name,e)}const m=[...f.entries()].map(a=>({day:a[0],record:a[1]})).sort((a,e)=>e.day.localeCompare(a.day)).map(a=>({day:a.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:a.record}));const N={class:"divide-y"},x=t("h2",{class:"mb-4"},"\u5386\u53F2",-1),A={class:"py-4"},V={class:"pl-[8px] relative timeline"},L={class:"font-bold pb-2"},W={class:"mt-2"},$=t("span",null," \u63D0\u4EA4\u4E86 ",-1),K={class:"font-bold"},j=t("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),G={class:"font-bold"},P=t("span",null," \u4E2A\u9898\u76EE",-1),z={class:"mt-2 pt-4"},H={class:"text-gray-400"},Y=w({setup(a){const e=s=>s.filter(o=>o.verdict===B.OK);return(s,o)=>{const y=E("router-link");return n(),c("div",N,[x,t("div",A,[t("div",V,[(n(!0),c(h,null,_(u(m),(b,i)=>(n(),c("div",{key:b.day,class:"relative timeline-item pl-4"},[t("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:i>0?0:void 0,borderTopLeftRadius:i>0?0:void 0,borderTopRightRadius:i>0?0:void 0,borderBottomLeftRadius:i+1<u(m).length?0:void 0,borderBottomRightRadius:i+1<u(m).length?0:void 0})},[t("div",L,d(b.day),1),t("div",null,[(n(!0),c(h,null,_(b.record.list(),r=>(n(),c("div",W,[C(y,{to:`/user/${r.name}`},{default:F(()=>[T(d(r.name),1)]),_:2},1032,["to"]),$,t("span",K,d(r.newSubmissions.length),1),j,t("span",G,d(e(r.newSubmissions).length),1),P]))),256))])],4)]))),128))])]),t("div",z,[t("span",H,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+d(u(O)),1)])])}}});export{Y as default};
