import{m as y,Y as g,d as w,c as E,o as n,e as i,f as a,F as p,C as _,h as u,j as c,X as C,g as S,w as T,l as B,V as F}from"./index.9054ff5d.js";import{l as D}from"./load.b9090f49.js";var R=JSON.parse('{"keyMaps":[["name","a"],["platform","b"],["id","c"],["pid","d"],["verdict","e"],["creationTime","f"]],"stringMaps":[["codeforces","a"],["OK","b"]],"data":{"startTime":1733463598,"history":{"user":[{"a":"jiangly","newSubmissions":[{"b":"a","c":295597316,"d":"2040F","a":"Number of Cubes","e":"b","f":1733670739},{"b":"a","c":295588148,"d":"2040E","a":"Control of Randomness","e":"b","f":1733669927},{"b":"a","c":295584127,"d":"2040D","a":"Non Prime Tree","e":"b","f":1733669600},{"b":"a","c":295576884,"d":"2040C","a":"Ordered Permutations","e":"b","f":1733669128},{"b":"a","c":295576718,"d":"2040B","a":"Paint a Strip","e":"b","f":1733669120},{"b":"a","c":295576604,"d":"2040A","a":"Game of Division","e":"b","f":1733669115}],"newContests":[]}],"contest":[]},"commits":["4b59a76b94fa3aedf347ba6c95801fd1a4aa597c","2d8228061cdc911a89031e33790398e0eb1339e6","e590d824b0a55eb62664e132a6326c10e54aacf7","3a193003a48072f3ff5ad21598c73d40dd9c344e","63ea39414557aa086772c3dc2b6d172ddaa3fd66","ed091dab5cb3a099f23c099a5dac5a99a2f8c196","5ace68c8ce7480a1d952d5e7f384e0bb40923356","ad7685a73a80464b30b037ae2a03ed645909e261","66b457ceaec02e11ed56a42676b2b51def182c76","34a2a221b17df8e83cd69e2a56576e67f7f882ea","daca9dfdde2f21e23ad4ed5a25e6380c32a37d36","2ae9fc5917de4038768d3686fce30c718c025b9d","cf19155db2b3da2ecc21b0b369620c2cc9be4ef2","94a556a757ad6e9feb3ed9d561055b1bffce0275"]}}');const b=D(R),k=b.history;b.commits;const N=y(b.startTime);class x{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const l=new Map;var h;for(const t of(h=k.user)!=null?h:[])for(const e of t.newSubmissions){if(e.creationTime<b.startTime)continue;const s=g(e.creationTime).value;l.has(s)||l.set(s,new x),l.get(s).mergeSub(t.name,e)}const f=[...l.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const O={class:"divide-y"},V=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),A={class:"py-4"},L={class:"pl-[8px] relative timeline"},M={class:"font-bold pb-2"},$={class:"mt-2"},P=a("span",null," \u63D0\u4EA4\u4E86 ",-1),j={class:"font-bold"},K=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),z={class:"font-bold"},G=a("span",null," \u4E2A\u9898\u76EE",-1),H={class:"mt-2 pt-4"},J={class:"text-gray-400"},Y=w({setup(t){const e=s=>s.filter(o=>o.verdict===F.OK);return(s,o)=>{const v=E("router-link");return n(),i("div",O,[V,a("div",A,[a("div",L,[(n(!0),i(p,null,_(u(f),(m,d)=>(n(),i("div",{key:m.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:C({borderTopWidth:d>0?0:void 0,borderTopLeftRadius:d>0?0:void 0,borderTopRightRadius:d>0?0:void 0,borderBottomLeftRadius:d+1<u(f).length?0:void 0,borderBottomRightRadius:d+1<u(f).length?0:void 0})},[a("div",M,c(m.day),1),a("div",null,[(n(!0),i(p,null,_(m.record.list(),r=>(n(),i("div",$,[S(v,{to:`/user/${r.name}`},{default:T(()=>[B(c(r.name),1)]),_:2},1032,["to"]),P,a("span",j,c(r.newSubmissions.length),1),K,a("span",z,c(e(r.newSubmissions).length),1),G]))),256))])],4)]))),128))])]),a("div",H,[a("span",J,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+c(u(N)),1)])])}}});export{Y as default};
