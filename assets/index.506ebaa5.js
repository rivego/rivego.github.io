import{m as v,Y as y,d as E,c as F,o as n,e as i,f as a,F as m,C as p,h as f,j as d,X as S,g as T,w as k,l as w,V as C}from"./index.dad0d97c.js";import{l as R}from"./load.b9090f49.js";var D=JSON.parse('{"keyMaps":[["name","a"],["newSubmissions","b"],["platform","c"],["id","d"],["pid","e"],["verdict","f"],["creationTime","g"],["newContests","h"]],"stringMaps":[["jiangly","a"],["codeforces","b"],["OK","c"],["1785F","d"],["Minimums or Medians","e"],["1785E","f"],["Infinite Game","g"],["1785D","h"],["Wooden Spoon","i"],["1785C","j"],["Monsters (hard version)","k"],["1785B","l"],["Letter Exchange","m"],["1785A","n"],["Monsters (easy version)","o"]],"data":{"startTime":1675229594,"history":{"user":[{"a":"a","b":[{"c":"b","d":192386879,"e":"1786B","a":"Cake Assembly Line","f":"c","g":1675624848},{"c":"b","d":192386463,"e":"1786A2","a":"Alternating Deck (hard version)","f":"c","g":1675624604},{"c":"b","d":192386324,"e":"1786A1","a":"Non-alternating Deck (easy version)","f":"c","g":1675624511},{"c":"b","d":192385993,"e":"d","a":"e","f":"c","g":1675624313},{"c":"b","d":192385982,"e":"f","a":"g","f":"c","g":1675624309},{"c":"b","d":192385972,"e":"h","a":"i","f":"c","g":1675624304},{"c":"b","d":192385966,"e":"j","a":"k","f":"c","g":1675624299},{"c":"b","d":192385951,"e":"l","a":"m","f":"c","g":1675624289},{"c":"b","d":192385935,"e":"n","a":"o","f":"c","g":1675624278},{"c":"b","d":192341740,"e":"f","a":"g","f":"c","g":1675607295},{"c":"b","d":192336126,"e":"d","a":"e","f":"c","g":1675606011},{"c":"b","d":192323435,"e":"h","a":"i","f":"c","g":1675603922},{"c":"b","d":192316174,"e":"j","a":"k","f":"c","g":1675602824},{"c":"b","d":192314000,"e":"j","a":"k","f":"WRONG_ANSWER","g":1675602504},{"c":"b","d":192311905,"e":"j","a":"k","f":"RUNTIME_ERROR","g":1675602206},{"c":"b","d":192288659,"e":"l","a":"m","f":"c","g":1675599466},{"c":"b","d":192282844,"e":"n","a":"o","f":"c","g":1675598849}],"h":[]},{"a":"a","b":[{"c":"b","d":191891474,"e":"1791G2","a":"Teleporters (Hard Version)","f":"c","g":1675435817},{"c":"b","d":191882059,"e":"1791G1","a":"Teleporters (Easy Version)","f":"c","g":1675435585},{"c":"b","d":191876213,"e":"1791F","a":"Range Update Point Query","f":"c","g":1675435462},{"c":"b","d":191868891,"e":"1791E","a":"Negatives and Positives","f":"c","g":1675435314},{"c":"b","d":191863883,"e":"1791D","a":"Distinct Split","f":"c","g":1675435224},{"c":"b","d":191858222,"e":"1791C","a":"Prepend and Append","f":"c","g":1675435127},{"c":"b","d":191854009,"e":"1791B","a":"Following Directions","f":"c","g":1675435064},{"c":"b","d":191850167,"e":"1791A","a":"Codeforces Checking","f":"c","g":1675434989}],"h":[]},{"a":"a","b":[{"c":"b","d":191580571,"e":"1778F","a":"Maximizing Root","f":"c","g":1675265299},{"c":"b","d":191574156,"e":"1778E","a":"The Tree Has Fallen!","f":"c","g":1675264399},{"c":"b","d":191563024,"e":"1778D","a":"Flexible String Revisit","f":"c","g":1675263212},{"c":"b","d":191557742,"e":"1778C","a":"Flexible String","f":"c","g":1675262831},{"c":"b","d":191552284,"e":"1778B","a":"The Forbidden Permutation","f":"c","g":1675262531},{"c":"b","d":191545810,"e":"1778A","a":"Flip Flop Sum","f":"c","g":1675262198}],"h":[]}],"contest":[]},"commits":["1efba568f7007316e7ff747e57540390af7db0fb","58c06fd0de74347dbfa03c85990ff297d5a1164d","23f21ae820dbe8459e25fdc26989ba2f9349446e","1e83aa4d8b686174f252ecb416ce96a7c022c480","5ebe296dfb26ce2aed785f76877e6f7539e0d6f7","b04b4c96486bfc04aa14c677f29a4819f3e63f2a","185058426a932a69ba0d772812695d3bf02b73b4","31f59ab4b54e56eb142648afa4ffb533f0e7fa89","ba5c9fc3ec5b0e127f08f696bb9dfba18adeb9bc","d76dbc5265b89a7e730f29e74a5c82de8bd41565","3d615b3df791cc9ae9e81c09e0ad0aa0eb012964","bf49169ea720fe0c96924621f385f06bafe92c91"]}}');const l=R(D),A=l.history;l.commits;const B=v(l.startTime);class M{constructor(){this.submissions=new Map}mergeSub(e,s){this.submissions.has(e)?this.submissions.get(e).push(s):this.submissions.set(e,[s])}list(){const e=[];for(const[s,o]of this.submissions)e.push({name:s,newSubmissions:o,newContests:[]});return e.sort((s,o)=>o.newSubmissions.length-s.newSubmissions.length)}}const b=new Map;var h;for(const t of(h=A.user)!=null?h:[])for(const e of t.newSubmissions){if(e.creationTime<l.startTime)continue;const s=y(e.creationTime).value;b.has(s)||b.set(s,new M),b.get(s).mergeSub(t.name,e)}const g=[...b.entries()].map(t=>({day:t[0],record:t[1]})).sort((t,e)=>e.day.localeCompare(t.day)).map(t=>({day:t.day.replace(/(\d+)-0?(\d+)-0?(\d+)/,"$1 \u5E74 $2 \u6708 $3 \u65E5"),record:t.record}));const x={class:"divide-y"},N=a("h2",{class:"mb-4"},"\u5386\u53F2",-1),j={class:"py-4"},V={class:"pl-[8px] relative timeline"},L={class:"font-bold pb-2"},O={class:"mt-2"},G=a("span",null," \u63D0\u4EA4\u4E86 ",-1),P={class:"font-bold"},W=a("span",null," \u6B21\u4EE3\u7801\uFF0C\u901A\u8FC7\u4E86 ",-1),$={class:"font-bold"},H=a("span",null," \u4E2A\u9898\u76EE",-1),z={class:"mt-2 pt-4"},I={class:"text-gray-400"},J=E({setup(t){const e=s=>s.filter(o=>o.verdict===C.OK);return(s,o)=>{const _=F("router-link");return n(),i("div",x,[N,a("div",j,[a("div",V,[(n(!0),i(m,null,p(f(g),(u,c)=>(n(),i("div",{key:u.day,class:"relative timeline-item pl-4"},[a("div",{class:"py-4 px-4 border rounded-md divide-y",style:S({borderTopWidth:c>0?0:void 0,borderTopLeftRadius:c>0?0:void 0,borderTopRightRadius:c>0?0:void 0,borderBottomLeftRadius:c+1<f(g).length?0:void 0,borderBottomRightRadius:c+1<f(g).length?0:void 0})},[a("div",L,d(u.day),1),a("div",null,[(n(!0),i(m,null,p(u.record.list(),r=>(n(),i("div",O,[T(_,{to:`/user/${r.name}`},{default:k(()=>[w(d(r.name),1)]),_:2},1032,["to"]),G,a("span",P,d(r.newSubmissions.length),1),W,a("span",$,d(e(r.newSubmissions).length),1),H]))),256))])],4)]))),128))])]),a("div",z,[a("span",I,"\u6700\u8FD1\u5F00\u59CB\u4E8E "+d(f(B)),1)])])}}});export{J as default};
